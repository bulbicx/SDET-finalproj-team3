/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 14334.0, "series": [{"data": [[0.0, 12451.0], [0.1, 12451.0], [0.2, 12451.0], [0.3, 12451.0], [0.4, 12451.0], [0.5, 12451.0], [0.6, 12451.0], [0.7, 12451.0], [0.8, 12451.0], [0.9, 12451.0], [1.0, 12451.0], [1.1, 12451.0], [1.2, 12451.0], [1.3, 12451.0], [1.4, 12451.0], [1.5, 12451.0], [1.6, 12451.0], [1.7, 12451.0], [1.8, 12451.0], [1.9, 12451.0], [2.0, 12451.0], [2.1, 12451.0], [2.2, 12451.0], [2.3, 12451.0], [2.4, 12451.0], [2.5, 12451.0], [2.6, 12451.0], [2.7, 12451.0], [2.8, 12451.0], [2.9, 12451.0], [3.0, 12451.0], [3.1, 12451.0], [3.2, 12451.0], [3.3, 12451.0], [3.4, 12451.0], [3.5, 12451.0], [3.6, 12451.0], [3.7, 12451.0], [3.8, 12451.0], [3.9, 12451.0], [4.0, 12451.0], [4.1, 12451.0], [4.2, 12451.0], [4.3, 12451.0], [4.4, 12451.0], [4.5, 12451.0], [4.6, 12451.0], [4.7, 12451.0], [4.8, 12451.0], [4.9, 12451.0], [5.0, 12451.0], [5.1, 12451.0], [5.2, 12451.0], [5.3, 12451.0], [5.4, 12451.0], [5.5, 12451.0], [5.6, 12451.0], [5.7, 12451.0], [5.8, 12451.0], [5.9, 12451.0], [6.0, 12451.0], [6.1, 12451.0], [6.2, 12451.0], [6.3, 12451.0], [6.4, 12451.0], [6.5, 12451.0], [6.6, 12451.0], [6.7, 12451.0], [6.8, 12451.0], [6.9, 12451.0], [7.0, 12451.0], [7.1, 12451.0], [7.2, 12451.0], [7.3, 12451.0], [7.4, 12451.0], [7.5, 12451.0], [7.6, 12451.0], [7.7, 12451.0], [7.8, 12451.0], [7.9, 12451.0], [8.0, 12451.0], [8.1, 12451.0], [8.2, 12451.0], [8.3, 12451.0], [8.4, 12451.0], [8.5, 12451.0], [8.6, 12451.0], [8.7, 12451.0], [8.8, 12451.0], [8.9, 12451.0], [9.0, 12451.0], [9.1, 12451.0], [9.2, 12451.0], [9.3, 12451.0], [9.4, 12451.0], [9.5, 12451.0], [9.6, 12451.0], [9.7, 12451.0], [9.8, 12451.0], [9.9, 12451.0], [10.0, 12451.0], [10.1, 12451.0], [10.2, 12451.0], [10.3, 12451.0], [10.4, 12451.0], [10.5, 12451.0], [10.6, 12451.0], [10.7, 12451.0], [10.8, 12451.0], [10.9, 12451.0], [11.0, 12451.0], [11.1, 12451.0], [11.2, 12529.0], [11.3, 12529.0], [11.4, 12529.0], [11.5, 12529.0], [11.6, 12529.0], [11.7, 12529.0], [11.8, 12529.0], [11.9, 12529.0], [12.0, 12529.0], [12.1, 12529.0], [12.2, 12529.0], [12.3, 12529.0], [12.4, 12529.0], [12.5, 12529.0], [12.6, 12529.0], [12.7, 12529.0], [12.8, 12529.0], [12.9, 12529.0], [13.0, 12529.0], [13.1, 12529.0], [13.2, 12529.0], [13.3, 12529.0], [13.4, 12529.0], [13.5, 12529.0], [13.6, 12529.0], [13.7, 12529.0], [13.8, 12529.0], [13.9, 12529.0], [14.0, 12529.0], [14.1, 12529.0], [14.2, 12529.0], [14.3, 12529.0], [14.4, 12529.0], [14.5, 12529.0], [14.6, 12529.0], [14.7, 12529.0], [14.8, 12529.0], [14.9, 12529.0], [15.0, 12529.0], [15.1, 12529.0], [15.2, 12529.0], [15.3, 12529.0], [15.4, 12529.0], [15.5, 12529.0], [15.6, 12529.0], [15.7, 12529.0], [15.8, 12529.0], [15.9, 12529.0], [16.0, 12529.0], [16.1, 12529.0], [16.2, 12529.0], [16.3, 12529.0], [16.4, 12529.0], [16.5, 12529.0], [16.6, 12529.0], [16.7, 12529.0], [16.8, 12529.0], [16.9, 12529.0], [17.0, 12529.0], [17.1, 12529.0], [17.2, 12529.0], [17.3, 12529.0], [17.4, 12529.0], [17.5, 12529.0], [17.6, 12529.0], [17.7, 12529.0], [17.8, 12529.0], [17.9, 12529.0], [18.0, 12529.0], [18.1, 12529.0], [18.2, 12529.0], [18.3, 12529.0], [18.4, 12529.0], [18.5, 12529.0], [18.6, 12529.0], [18.7, 12529.0], [18.8, 12529.0], [18.9, 12529.0], [19.0, 12529.0], [19.1, 12529.0], [19.2, 12529.0], [19.3, 12529.0], [19.4, 12529.0], [19.5, 12529.0], [19.6, 12529.0], [19.7, 12529.0], [19.8, 12529.0], [19.9, 12529.0], [20.0, 12529.0], [20.1, 12529.0], [20.2, 12529.0], [20.3, 12529.0], [20.4, 12529.0], [20.5, 12529.0], [20.6, 12529.0], [20.7, 12529.0], [20.8, 12529.0], [20.9, 12529.0], [21.0, 12529.0], [21.1, 12529.0], [21.2, 12529.0], [21.3, 12529.0], [21.4, 12529.0], [21.5, 12529.0], [21.6, 12529.0], [21.7, 12529.0], [21.8, 12529.0], [21.9, 12529.0], [22.0, 12529.0], [22.1, 12529.0], [22.2, 12529.0], [22.3, 12530.0], [22.4, 12530.0], [22.5, 12530.0], [22.6, 12530.0], [22.7, 12530.0], [22.8, 12530.0], [22.9, 12530.0], [23.0, 12530.0], [23.1, 12530.0], [23.2, 12530.0], [23.3, 12530.0], [23.4, 12530.0], [23.5, 12530.0], [23.6, 12530.0], [23.7, 12530.0], [23.8, 12530.0], [23.9, 12530.0], [24.0, 12530.0], [24.1, 12530.0], [24.2, 12530.0], [24.3, 12530.0], [24.4, 12530.0], [24.5, 12530.0], [24.6, 12530.0], [24.7, 12530.0], [24.8, 12530.0], [24.9, 12530.0], [25.0, 12530.0], [25.1, 12530.0], [25.2, 12530.0], [25.3, 12530.0], [25.4, 12530.0], [25.5, 12530.0], [25.6, 12530.0], [25.7, 12530.0], [25.8, 12530.0], [25.9, 12530.0], [26.0, 12530.0], [26.1, 12530.0], [26.2, 12530.0], [26.3, 12530.0], [26.4, 12530.0], [26.5, 12530.0], [26.6, 12530.0], [26.7, 12530.0], [26.8, 12530.0], [26.9, 12530.0], [27.0, 12530.0], [27.1, 12530.0], [27.2, 12530.0], [27.3, 12530.0], [27.4, 12530.0], [27.5, 12530.0], [27.6, 12530.0], [27.7, 12530.0], [27.8, 12530.0], [27.9, 12530.0], [28.0, 12530.0], [28.1, 12530.0], [28.2, 12530.0], [28.3, 12530.0], [28.4, 12530.0], [28.5, 12530.0], [28.6, 12530.0], [28.7, 12530.0], [28.8, 12530.0], [28.9, 12530.0], [29.0, 12530.0], [29.1, 12530.0], [29.2, 12530.0], [29.3, 12530.0], [29.4, 12530.0], [29.5, 12530.0], [29.6, 12530.0], [29.7, 12530.0], [29.8, 12530.0], [29.9, 12530.0], [30.0, 12530.0], [30.1, 12530.0], [30.2, 12530.0], [30.3, 12530.0], [30.4, 12530.0], [30.5, 12530.0], [30.6, 12530.0], [30.7, 12530.0], [30.8, 12530.0], [30.9, 12530.0], [31.0, 12530.0], [31.1, 12530.0], [31.2, 12530.0], [31.3, 12530.0], [31.4, 12530.0], [31.5, 12530.0], [31.6, 12530.0], [31.7, 12530.0], [31.8, 12530.0], [31.9, 12530.0], [32.0, 12530.0], [32.1, 12530.0], [32.2, 12530.0], [32.3, 12530.0], [32.4, 12530.0], [32.5, 12530.0], [32.6, 12530.0], [32.7, 12530.0], [32.8, 12530.0], [32.9, 12530.0], [33.0, 12530.0], [33.1, 12530.0], [33.2, 12530.0], [33.3, 12530.0], [33.4, 12717.0], [33.5, 12717.0], [33.6, 12717.0], [33.7, 12717.0], [33.8, 12717.0], [33.9, 12717.0], [34.0, 12717.0], [34.1, 12717.0], [34.2, 12717.0], [34.3, 12717.0], [34.4, 12717.0], [34.5, 12717.0], [34.6, 12717.0], [34.7, 12717.0], [34.8, 12717.0], [34.9, 12717.0], [35.0, 12717.0], [35.1, 12717.0], [35.2, 12717.0], [35.3, 12717.0], [35.4, 12717.0], [35.5, 12717.0], [35.6, 12717.0], [35.7, 12717.0], [35.8, 12717.0], [35.9, 12717.0], [36.0, 12717.0], [36.1, 12717.0], [36.2, 12717.0], [36.3, 12717.0], [36.4, 12717.0], [36.5, 12717.0], [36.6, 12717.0], [36.7, 12717.0], [36.8, 12717.0], [36.9, 12717.0], [37.0, 12717.0], [37.1, 12717.0], [37.2, 12717.0], [37.3, 12717.0], [37.4, 12717.0], [37.5, 12717.0], [37.6, 12717.0], [37.7, 12717.0], [37.8, 12717.0], [37.9, 12717.0], [38.0, 12717.0], [38.1, 12717.0], [38.2, 12717.0], [38.3, 12717.0], [38.4, 12717.0], [38.5, 12717.0], [38.6, 12717.0], [38.7, 12717.0], [38.8, 12717.0], [38.9, 12717.0], [39.0, 12717.0], [39.1, 12717.0], [39.2, 12717.0], [39.3, 12717.0], [39.4, 12717.0], [39.5, 12717.0], [39.6, 12717.0], [39.7, 12717.0], [39.8, 12717.0], [39.9, 12717.0], [40.0, 12717.0], [40.1, 12717.0], [40.2, 12717.0], [40.3, 12717.0], [40.4, 12717.0], [40.5, 12717.0], [40.6, 12717.0], [40.7, 12717.0], [40.8, 12717.0], [40.9, 12717.0], [41.0, 12717.0], [41.1, 12717.0], [41.2, 12717.0], [41.3, 12717.0], [41.4, 12717.0], [41.5, 12717.0], [41.6, 12717.0], [41.7, 12717.0], [41.8, 12717.0], [41.9, 12717.0], [42.0, 12717.0], [42.1, 12717.0], [42.2, 12717.0], [42.3, 12717.0], [42.4, 12717.0], [42.5, 12717.0], [42.6, 12717.0], [42.7, 12717.0], [42.8, 12717.0], [42.9, 12717.0], [43.0, 12717.0], [43.1, 12717.0], [43.2, 12717.0], [43.3, 12717.0], [43.4, 12717.0], [43.5, 12717.0], [43.6, 12717.0], [43.7, 12717.0], [43.8, 12717.0], [43.9, 12717.0], [44.0, 12717.0], [44.1, 12717.0], [44.2, 12717.0], [44.3, 12717.0], [44.4, 12717.0], [44.5, 12757.0], [44.6, 12757.0], [44.7, 12757.0], [44.8, 12757.0], [44.9, 12757.0], [45.0, 12757.0], [45.1, 12757.0], [45.2, 12757.0], [45.3, 12757.0], [45.4, 12757.0], [45.5, 12757.0], [45.6, 12757.0], [45.7, 12757.0], [45.8, 12757.0], [45.9, 12757.0], [46.0, 12757.0], [46.1, 12757.0], [46.2, 12757.0], [46.3, 12757.0], [46.4, 12757.0], [46.5, 12757.0], [46.6, 12757.0], [46.7, 12757.0], [46.8, 12757.0], [46.9, 12757.0], [47.0, 12757.0], [47.1, 12757.0], [47.2, 12757.0], [47.3, 12757.0], [47.4, 12757.0], [47.5, 12757.0], [47.6, 12757.0], [47.7, 12757.0], [47.8, 12757.0], [47.9, 12757.0], [48.0, 12757.0], [48.1, 12757.0], [48.2, 12757.0], [48.3, 12757.0], [48.4, 12757.0], [48.5, 12757.0], [48.6, 12757.0], [48.7, 12757.0], [48.8, 12757.0], [48.9, 12757.0], [49.0, 12757.0], [49.1, 12757.0], [49.2, 12757.0], [49.3, 12757.0], [49.4, 12757.0], [49.5, 12757.0], [49.6, 12757.0], [49.7, 12757.0], [49.8, 12757.0], [49.9, 12757.0], [50.0, 12757.0], [50.1, 12757.0], [50.2, 12757.0], [50.3, 12757.0], [50.4, 12757.0], [50.5, 12757.0], [50.6, 12757.0], [50.7, 12757.0], [50.8, 12757.0], [50.9, 12757.0], [51.0, 12757.0], [51.1, 12757.0], [51.2, 12757.0], [51.3, 12757.0], [51.4, 12757.0], [51.5, 12757.0], [51.6, 12757.0], [51.7, 12757.0], [51.8, 12757.0], [51.9, 12757.0], [52.0, 12757.0], [52.1, 12757.0], [52.2, 12757.0], [52.3, 12757.0], [52.4, 12757.0], [52.5, 12757.0], [52.6, 12757.0], [52.7, 12757.0], [52.8, 12757.0], [52.9, 12757.0], [53.0, 12757.0], [53.1, 12757.0], [53.2, 12757.0], [53.3, 12757.0], [53.4, 12757.0], [53.5, 12757.0], [53.6, 12757.0], [53.7, 12757.0], [53.8, 12757.0], [53.9, 12757.0], [54.0, 12757.0], [54.1, 12757.0], [54.2, 12757.0], [54.3, 12757.0], [54.4, 12757.0], [54.5, 12757.0], [54.6, 12757.0], [54.7, 12757.0], [54.8, 12757.0], [54.9, 12757.0], [55.0, 12757.0], [55.1, 12757.0], [55.2, 12757.0], [55.3, 12757.0], [55.4, 12757.0], [55.5, 12757.0], [55.6, 12761.0], [55.7, 12761.0], [55.8, 12761.0], [55.9, 12761.0], [56.0, 12761.0], [56.1, 12761.0], [56.2, 12761.0], [56.3, 12761.0], [56.4, 12761.0], [56.5, 12761.0], [56.6, 12761.0], [56.7, 12761.0], [56.8, 12761.0], [56.9, 12761.0], [57.0, 12761.0], [57.1, 12761.0], [57.2, 12761.0], [57.3, 12761.0], [57.4, 12761.0], [57.5, 12761.0], [57.6, 12761.0], [57.7, 12761.0], [57.8, 12761.0], [57.9, 12761.0], [58.0, 12761.0], [58.1, 12761.0], [58.2, 12761.0], [58.3, 12761.0], [58.4, 12761.0], [58.5, 12761.0], [58.6, 12761.0], [58.7, 12761.0], [58.8, 12761.0], [58.9, 12761.0], [59.0, 12761.0], [59.1, 12761.0], [59.2, 12761.0], [59.3, 12761.0], [59.4, 12761.0], [59.5, 12761.0], [59.6, 12761.0], [59.7, 12761.0], [59.8, 12761.0], [59.9, 12761.0], [60.0, 12761.0], [60.1, 12761.0], [60.2, 12761.0], [60.3, 12761.0], [60.4, 12761.0], [60.5, 12761.0], [60.6, 12761.0], [60.7, 12761.0], [60.8, 12761.0], [60.9, 12761.0], [61.0, 12761.0], [61.1, 12761.0], [61.2, 12761.0], [61.3, 12761.0], [61.4, 12761.0], [61.5, 12761.0], [61.6, 12761.0], [61.7, 12761.0], [61.8, 12761.0], [61.9, 12761.0], [62.0, 12761.0], [62.1, 12761.0], [62.2, 12761.0], [62.3, 12761.0], [62.4, 12761.0], [62.5, 12761.0], [62.6, 12761.0], [62.7, 12761.0], [62.8, 12761.0], [62.9, 12761.0], [63.0, 12761.0], [63.1, 12761.0], [63.2, 12761.0], [63.3, 12761.0], [63.4, 12761.0], [63.5, 12761.0], [63.6, 12761.0], [63.7, 12761.0], [63.8, 12761.0], [63.9, 12761.0], [64.0, 12761.0], [64.1, 12761.0], [64.2, 12761.0], [64.3, 12761.0], [64.4, 12761.0], [64.5, 12761.0], [64.6, 12761.0], [64.7, 12761.0], [64.8, 12761.0], [64.9, 12761.0], [65.0, 12761.0], [65.1, 12761.0], [65.2, 12761.0], [65.3, 12761.0], [65.4, 12761.0], [65.5, 12761.0], [65.6, 12761.0], [65.7, 12761.0], [65.8, 12761.0], [65.9, 12761.0], [66.0, 12761.0], [66.1, 12761.0], [66.2, 12761.0], [66.3, 12761.0], [66.4, 12761.0], [66.5, 12761.0], [66.6, 12761.0], [66.7, 12762.0], [66.8, 12762.0], [66.9, 12762.0], [67.0, 12762.0], [67.1, 12762.0], [67.2, 12762.0], [67.3, 12762.0], [67.4, 12762.0], [67.5, 12762.0], [67.6, 12762.0], [67.7, 12762.0], [67.8, 12762.0], [67.9, 12762.0], [68.0, 12762.0], [68.1, 12762.0], [68.2, 12762.0], [68.3, 12762.0], [68.4, 12762.0], [68.5, 12762.0], [68.6, 12762.0], [68.7, 12762.0], [68.8, 12762.0], [68.9, 12762.0], [69.0, 12762.0], [69.1, 12762.0], [69.2, 12762.0], [69.3, 12762.0], [69.4, 12762.0], [69.5, 12762.0], [69.6, 12762.0], [69.7, 12762.0], [69.8, 12762.0], [69.9, 12762.0], [70.0, 12762.0], [70.1, 12762.0], [70.2, 12762.0], [70.3, 12762.0], [70.4, 12762.0], [70.5, 12762.0], [70.6, 12762.0], [70.7, 12762.0], [70.8, 12762.0], [70.9, 12762.0], [71.0, 12762.0], [71.1, 12762.0], [71.2, 12762.0], [71.3, 12762.0], [71.4, 12762.0], [71.5, 12762.0], [71.6, 12762.0], [71.7, 12762.0], [71.8, 12762.0], [71.9, 12762.0], [72.0, 12762.0], [72.1, 12762.0], [72.2, 12762.0], [72.3, 12762.0], [72.4, 12762.0], [72.5, 12762.0], [72.6, 12762.0], [72.7, 12762.0], [72.8, 12762.0], [72.9, 12762.0], [73.0, 12762.0], [73.1, 12762.0], [73.2, 12762.0], [73.3, 12762.0], [73.4, 12762.0], [73.5, 12762.0], [73.6, 12762.0], [73.7, 12762.0], [73.8, 12762.0], [73.9, 12762.0], [74.0, 12762.0], [74.1, 12762.0], [74.2, 12762.0], [74.3, 12762.0], [74.4, 12762.0], [74.5, 12762.0], [74.6, 12762.0], [74.7, 12762.0], [74.8, 12762.0], [74.9, 12762.0], [75.0, 12762.0], [75.1, 12762.0], [75.2, 12762.0], [75.3, 12762.0], [75.4, 12762.0], [75.5, 12762.0], [75.6, 12762.0], [75.7, 12762.0], [75.8, 12762.0], [75.9, 12762.0], [76.0, 12762.0], [76.1, 12762.0], [76.2, 12762.0], [76.3, 12762.0], [76.4, 12762.0], [76.5, 12762.0], [76.6, 12762.0], [76.7, 12762.0], [76.8, 12762.0], [76.9, 12762.0], [77.0, 12762.0], [77.1, 12762.0], [77.2, 12762.0], [77.3, 12762.0], [77.4, 12762.0], [77.5, 12762.0], [77.6, 12762.0], [77.7, 12762.0], [77.8, 12765.0], [77.9, 12765.0], [78.0, 12765.0], [78.1, 12765.0], [78.2, 12765.0], [78.3, 12765.0], [78.4, 12765.0], [78.5, 12765.0], [78.6, 12765.0], [78.7, 12765.0], [78.8, 12765.0], [78.9, 12765.0], [79.0, 12765.0], [79.1, 12765.0], [79.2, 12765.0], [79.3, 12765.0], [79.4, 12765.0], [79.5, 12765.0], [79.6, 12765.0], [79.7, 12765.0], [79.8, 12765.0], [79.9, 12765.0], [80.0, 12765.0], [80.1, 12765.0], [80.2, 12765.0], [80.3, 12765.0], [80.4, 12765.0], [80.5, 12765.0], [80.6, 12765.0], [80.7, 12765.0], [80.8, 12765.0], [80.9, 12765.0], [81.0, 12765.0], [81.1, 12765.0], [81.2, 12765.0], [81.3, 12765.0], [81.4, 12765.0], [81.5, 12765.0], [81.6, 12765.0], [81.7, 12765.0], [81.8, 12765.0], [81.9, 12765.0], [82.0, 12765.0], [82.1, 12765.0], [82.2, 12765.0], [82.3, 12765.0], [82.4, 12765.0], [82.5, 12765.0], [82.6, 12765.0], [82.7, 12765.0], [82.8, 12765.0], [82.9, 12765.0], [83.0, 12765.0], [83.1, 12765.0], [83.2, 12765.0], [83.3, 12765.0], [83.4, 12765.0], [83.5, 12765.0], [83.6, 12765.0], [83.7, 12765.0], [83.8, 12765.0], [83.9, 12765.0], [84.0, 12765.0], [84.1, 12765.0], [84.2, 12765.0], [84.3, 12765.0], [84.4, 12765.0], [84.5, 12765.0], [84.6, 12765.0], [84.7, 12765.0], [84.8, 12765.0], [84.9, 12765.0], [85.0, 12765.0], [85.1, 12765.0], [85.2, 12765.0], [85.3, 12765.0], [85.4, 12765.0], [85.5, 12765.0], [85.6, 12765.0], [85.7, 12765.0], [85.8, 12765.0], [85.9, 12765.0], [86.0, 12765.0], [86.1, 12765.0], [86.2, 12765.0], [86.3, 12765.0], [86.4, 12765.0], [86.5, 12765.0], [86.6, 12765.0], [86.7, 12765.0], [86.8, 12765.0], [86.9, 12765.0], [87.0, 12765.0], [87.1, 12765.0], [87.2, 12765.0], [87.3, 12765.0], [87.4, 12765.0], [87.5, 12765.0], [87.6, 12765.0], [87.7, 12765.0], [87.8, 12765.0], [87.9, 12765.0], [88.0, 12765.0], [88.1, 12765.0], [88.2, 12765.0], [88.3, 12765.0], [88.4, 12765.0], [88.5, 12765.0], [88.6, 12765.0], [88.7, 12765.0], [88.8, 12765.0], [88.9, 13169.0], [89.0, 13169.0], [89.1, 13169.0], [89.2, 13169.0], [89.3, 13169.0], [89.4, 13169.0], [89.5, 13169.0], [89.6, 13169.0], [89.7, 13169.0], [89.8, 13169.0], [89.9, 13169.0], [90.0, 13169.0], [90.1, 13169.0], [90.2, 13169.0], [90.3, 13169.0], [90.4, 13169.0], [90.5, 13169.0], [90.6, 13169.0], [90.7, 13169.0], [90.8, 13169.0], [90.9, 13169.0], [91.0, 13169.0], [91.1, 13169.0], [91.2, 13169.0], [91.3, 13169.0], [91.4, 13169.0], [91.5, 13169.0], [91.6, 13169.0], [91.7, 13169.0], [91.8, 13169.0], [91.9, 13169.0], [92.0, 13169.0], [92.1, 13169.0], [92.2, 13169.0], [92.3, 13169.0], [92.4, 13169.0], [92.5, 13169.0], [92.6, 13169.0], [92.7, 13169.0], [92.8, 13169.0], [92.9, 13169.0], [93.0, 13169.0], [93.1, 13169.0], [93.2, 13169.0], [93.3, 13169.0], [93.4, 13169.0], [93.5, 13169.0], [93.6, 13169.0], [93.7, 13169.0], [93.8, 13169.0], [93.9, 13169.0], [94.0, 13169.0], [94.1, 13169.0], [94.2, 13169.0], [94.3, 13169.0], [94.4, 13169.0], [94.5, 13169.0], [94.6, 13169.0], [94.7, 13169.0], [94.8, 13169.0], [94.9, 13169.0], [95.0, 13169.0], [95.1, 13169.0], [95.2, 13169.0], [95.3, 13169.0], [95.4, 13169.0], [95.5, 13169.0], [95.6, 13169.0], [95.7, 13169.0], [95.8, 13169.0], [95.9, 13169.0], [96.0, 13169.0], [96.1, 13169.0], [96.2, 13169.0], [96.3, 13169.0], [96.4, 13169.0], [96.5, 13169.0], [96.6, 13169.0], [96.7, 13169.0], [96.8, 13169.0], [96.9, 13169.0], [97.0, 13169.0], [97.1, 13169.0], [97.2, 13169.0], [97.3, 13169.0], [97.4, 13169.0], [97.5, 13169.0], [97.6, 13169.0], [97.7, 13169.0], [97.8, 13169.0], [97.9, 13169.0], [98.0, 13169.0], [98.1, 13169.0], [98.2, 13169.0], [98.3, 13169.0], [98.4, 13169.0], [98.5, 13169.0], [98.6, 13169.0], [98.7, 13169.0], [98.8, 13169.0], [98.9, 13169.0], [99.0, 13169.0], [99.1, 13169.0], [99.2, 13169.0], [99.3, 13169.0], [99.4, 13169.0], [99.5, 13169.0], [99.6, 13169.0], [99.7, 13169.0], [99.8, 13169.0], [99.9, 13169.0], [100.0, 13169.0]], "isOverall": false, "label": "Update Artist", "isController": false}, {"data": [[0.0, 1.0], [0.1, 2.0], [0.2, 2.0], [0.3, 2.0], [0.4, 2.0], [0.5, 3.0], [0.6, 4.0], [0.7, 32.0], [0.8, 49.0], [0.9, 51.0], [1.0, 51.0], [1.1, 53.0], [1.2, 56.0], [1.3, 60.0], [1.4, 62.0], [1.5, 64.0], [1.6, 66.0], [1.7, 66.0], [1.8, 69.0], [1.9, 69.0], [2.0, 69.0], [2.1, 70.0], [2.2, 71.0], [2.3, 73.0], [2.4, 76.0], [2.5, 76.0], [2.6, 77.0], [2.7, 78.0], [2.8, 78.0], [2.9, 81.0], [3.0, 86.0], [3.1, 86.0], [3.2, 91.0], [3.3, 92.0], [3.4, 93.0], [3.5, 95.0], [3.6, 95.0], [3.7, 97.0], [3.8, 98.0], [3.9, 98.0], [4.0, 100.0], [4.1, 102.0], [4.2, 105.0], [4.3, 106.0], [4.4, 106.0], [4.5, 108.0], [4.6, 108.0], [4.7, 109.0], [4.8, 109.0], [4.9, 111.0], [5.0, 112.0], [5.1, 112.0], [5.2, 114.0], [5.3, 115.0], [5.4, 116.0], [5.5, 117.0], [5.6, 118.0], [5.7, 119.0], [5.8, 120.0], [5.9, 120.0], [6.0, 122.0], [6.1, 122.0], [6.2, 123.0], [6.3, 124.0], [6.4, 126.0], [6.5, 128.0], [6.6, 130.0], [6.7, 133.0], [6.8, 134.0], [6.9, 134.0], [7.0, 138.0], [7.1, 140.0], [7.2, 144.0], [7.3, 148.0], [7.4, 148.0], [7.5, 150.0], [7.6, 151.0], [7.7, 153.0], [7.8, 153.0], [7.9, 155.0], [8.0, 159.0], [8.1, 159.0], [8.2, 160.0], [8.3, 161.0], [8.4, 163.0], [8.5, 163.0], [8.6, 164.0], [8.7, 164.0], [8.8, 165.0], [8.9, 166.0], [9.0, 171.0], [9.1, 171.0], [9.2, 173.0], [9.3, 174.0], [9.4, 174.0], [9.5, 175.0], [9.6, 177.0], [9.7, 177.0], [9.8, 179.0], [9.9, 184.0], [10.0, 184.0], [10.1, 184.0], [10.2, 189.0], [10.3, 190.0], [10.4, 191.0], [10.5, 194.0], [10.6, 195.0], [10.7, 196.0], [10.8, 198.0], [10.9, 198.0], [11.0, 198.0], [11.1, 199.0], [11.2, 199.0], [11.3, 199.0], [11.4, 200.0], [11.5, 200.0], [11.6, 201.0], [11.7, 201.0], [11.8, 202.0], [11.9, 203.0], [12.0, 204.0], [12.1, 205.0], [12.2, 206.0], [12.3, 206.0], [12.4, 207.0], [12.5, 208.0], [12.6, 208.0], [12.7, 208.0], [12.8, 209.0], [12.9, 210.0], [13.0, 211.0], [13.1, 211.0], [13.2, 212.0], [13.3, 212.0], [13.4, 213.0], [13.5, 213.0], [13.6, 213.0], [13.7, 214.0], [13.8, 218.0], [13.9, 219.0], [14.0, 220.0], [14.1, 221.0], [14.2, 223.0], [14.3, 223.0], [14.4, 224.0], [14.5, 224.0], [14.6, 224.0], [14.7, 224.0], [14.8, 227.0], [14.9, 229.0], [15.0, 232.0], [15.1, 232.0], [15.2, 232.0], [15.3, 232.0], [15.4, 233.0], [15.5, 233.0], [15.6, 233.0], [15.7, 233.0], [15.8, 234.0], [15.9, 235.0], [16.0, 236.0], [16.1, 236.0], [16.2, 236.0], [16.3, 236.0], [16.4, 238.0], [16.5, 238.0], [16.6, 238.0], [16.7, 240.0], [16.8, 240.0], [16.9, 242.0], [17.0, 243.0], [17.1, 243.0], [17.2, 243.0], [17.3, 243.0], [17.4, 244.0], [17.5, 244.0], [17.6, 245.0], [17.7, 247.0], [17.8, 249.0], [17.9, 249.0], [18.0, 250.0], [18.1, 251.0], [18.2, 251.0], [18.3, 251.0], [18.4, 252.0], [18.5, 252.0], [18.6, 252.0], [18.7, 253.0], [18.8, 254.0], [18.9, 254.0], [19.0, 254.0], [19.1, 255.0], [19.2, 255.0], [19.3, 255.0], [19.4, 256.0], [19.5, 257.0], [19.6, 258.0], [19.7, 259.0], [19.8, 260.0], [19.9, 261.0], [20.0, 263.0], [20.1, 264.0], [20.2, 265.0], [20.3, 266.0], [20.4, 267.0], [20.5, 268.0], [20.6, 270.0], [20.7, 270.0], [20.8, 271.0], [20.9, 272.0], [21.0, 275.0], [21.1, 278.0], [21.2, 278.0], [21.3, 279.0], [21.4, 282.0], [21.5, 284.0], [21.6, 285.0], [21.7, 286.0], [21.8, 290.0], [21.9, 290.0], [22.0, 292.0], [22.1, 294.0], [22.2, 295.0], [22.3, 295.0], [22.4, 296.0], [22.5, 297.0], [22.6, 297.0], [22.7, 298.0], [22.8, 298.0], [22.9, 299.0], [23.0, 299.0], [23.1, 300.0], [23.2, 301.0], [23.3, 302.0], [23.4, 303.0], [23.5, 304.0], [23.6, 306.0], [23.7, 306.0], [23.8, 309.0], [23.9, 311.0], [24.0, 312.0], [24.1, 312.0], [24.2, 314.0], [24.3, 315.0], [24.4, 316.0], [24.5, 317.0], [24.6, 317.0], [24.7, 318.0], [24.8, 318.0], [24.9, 319.0], [25.0, 320.0], [25.1, 320.0], [25.2, 322.0], [25.3, 323.0], [25.4, 324.0], [25.5, 324.0], [25.6, 326.0], [25.7, 326.0], [25.8, 326.0], [25.9, 328.0], [26.0, 328.0], [26.1, 329.0], [26.2, 329.0], [26.3, 330.0], [26.4, 330.0], [26.5, 330.0], [26.6, 332.0], [26.7, 332.0], [26.8, 333.0], [26.9, 335.0], [27.0, 336.0], [27.1, 337.0], [27.2, 339.0], [27.3, 340.0], [27.4, 341.0], [27.5, 342.0], [27.6, 342.0], [27.7, 343.0], [27.8, 347.0], [27.9, 347.0], [28.0, 347.0], [28.1, 347.0], [28.2, 350.0], [28.3, 350.0], [28.4, 351.0], [28.5, 352.0], [28.6, 353.0], [28.7, 354.0], [28.8, 357.0], [28.9, 360.0], [29.0, 362.0], [29.1, 362.0], [29.2, 364.0], [29.3, 364.0], [29.4, 365.0], [29.5, 365.0], [29.6, 366.0], [29.7, 367.0], [29.8, 367.0], [29.9, 367.0], [30.0, 368.0], [30.1, 368.0], [30.2, 370.0], [30.3, 370.0], [30.4, 371.0], [30.5, 371.0], [30.6, 372.0], [30.7, 373.0], [30.8, 374.0], [30.9, 375.0], [31.0, 375.0], [31.1, 376.0], [31.2, 377.0], [31.3, 378.0], [31.4, 378.0], [31.5, 378.0], [31.6, 379.0], [31.7, 379.0], [31.8, 380.0], [31.9, 380.0], [32.0, 380.0], [32.1, 380.0], [32.2, 381.0], [32.3, 381.0], [32.4, 382.0], [32.5, 382.0], [32.6, 382.0], [32.7, 383.0], [32.8, 384.0], [32.9, 384.0], [33.0, 384.0], [33.1, 385.0], [33.2, 386.0], [33.3, 387.0], [33.4, 388.0], [33.5, 388.0], [33.6, 388.0], [33.7, 389.0], [33.8, 390.0], [33.9, 390.0], [34.0, 391.0], [34.1, 391.0], [34.2, 392.0], [34.3, 392.0], [34.4, 392.0], [34.5, 394.0], [34.6, 394.0], [34.7, 395.0], [34.8, 395.0], [34.9, 396.0], [35.0, 396.0], [35.1, 397.0], [35.2, 397.0], [35.3, 398.0], [35.4, 399.0], [35.5, 403.0], [35.6, 403.0], [35.7, 406.0], [35.8, 409.0], [35.9, 413.0], [36.0, 413.0], [36.1, 420.0], [36.2, 423.0], [36.3, 425.0], [36.4, 426.0], [36.5, 426.0], [36.6, 430.0], [36.7, 434.0], [36.8, 438.0], [36.9, 441.0], [37.0, 442.0], [37.1, 444.0], [37.2, 451.0], [37.3, 453.0], [37.4, 462.0], [37.5, 463.0], [37.6, 465.0], [37.7, 468.0], [37.8, 470.0], [37.9, 473.0], [38.0, 473.0], [38.1, 476.0], [38.2, 477.0], [38.3, 478.0], [38.4, 481.0], [38.5, 482.0], [38.6, 482.0], [38.7, 483.0], [38.8, 484.0], [38.9, 485.0], [39.0, 485.0], [39.1, 486.0], [39.2, 487.0], [39.3, 487.0], [39.4, 489.0], [39.5, 489.0], [39.6, 492.0], [39.7, 499.0], [39.8, 500.0], [39.9, 501.0], [40.0, 501.0], [40.1, 506.0], [40.2, 510.0], [40.3, 513.0], [40.4, 516.0], [40.5, 517.0], [40.6, 518.0], [40.7, 521.0], [40.8, 521.0], [40.9, 522.0], [41.0, 523.0], [41.1, 525.0], [41.2, 531.0], [41.3, 534.0], [41.4, 536.0], [41.5, 538.0], [41.6, 540.0], [41.7, 541.0], [41.8, 543.0], [41.9, 548.0], [42.0, 549.0], [42.1, 550.0], [42.2, 551.0], [42.3, 551.0], [42.4, 552.0], [42.5, 553.0], [42.6, 554.0], [42.7, 554.0], [42.8, 555.0], [42.9, 556.0], [43.0, 557.0], [43.1, 558.0], [43.2, 558.0], [43.3, 559.0], [43.4, 559.0], [43.5, 560.0], [43.6, 560.0], [43.7, 562.0], [43.8, 562.0], [43.9, 563.0], [44.0, 563.0], [44.1, 564.0], [44.2, 564.0], [44.3, 565.0], [44.4, 567.0], [44.5, 567.0], [44.6, 567.0], [44.7, 568.0], [44.8, 568.0], [44.9, 568.0], [45.0, 569.0], [45.1, 570.0], [45.2, 570.0], [45.3, 571.0], [45.4, 572.0], [45.5, 572.0], [45.6, 574.0], [45.7, 577.0], [45.8, 578.0], [45.9, 578.0], [46.0, 578.0], [46.1, 578.0], [46.2, 578.0], [46.3, 578.0], [46.4, 579.0], [46.5, 579.0], [46.6, 579.0], [46.7, 579.0], [46.8, 579.0], [46.9, 580.0], [47.0, 580.0], [47.1, 580.0], [47.2, 580.0], [47.3, 580.0], [47.4, 581.0], [47.5, 581.0], [47.6, 581.0], [47.7, 582.0], [47.8, 582.0], [47.9, 583.0], [48.0, 583.0], [48.1, 583.0], [48.2, 583.0], [48.3, 584.0], [48.4, 584.0], [48.5, 584.0], [48.6, 584.0], [48.7, 584.0], [48.8, 584.0], [48.9, 585.0], [49.0, 585.0], [49.1, 585.0], [49.2, 585.0], [49.3, 586.0], [49.4, 586.0], [49.5, 586.0], [49.6, 587.0], [49.7, 588.0], [49.8, 589.0], [49.9, 590.0], [50.0, 590.0], [50.1, 591.0], [50.2, 591.0], [50.3, 591.0], [50.4, 591.0], [50.5, 591.0], [50.6, 592.0], [50.7, 592.0], [50.8, 593.0], [50.9, 593.0], [51.0, 594.0], [51.1, 594.0], [51.2, 596.0], [51.3, 598.0], [51.4, 602.0], [51.5, 603.0], [51.6, 608.0], [51.7, 614.0], [51.8, 615.0], [51.9, 616.0], [52.0, 617.0], [52.1, 618.0], [52.2, 618.0], [52.3, 621.0], [52.4, 622.0], [52.5, 623.0], [52.6, 625.0], [52.7, 630.0], [52.8, 636.0], [52.9, 639.0], [53.0, 640.0], [53.1, 644.0], [53.2, 652.0], [53.3, 679.0], [53.4, 684.0], [53.5, 686.0], [53.6, 702.0], [53.7, 719.0], [53.8, 721.0], [53.9, 726.0], [54.0, 727.0], [54.1, 731.0], [54.2, 740.0], [54.3, 744.0], [54.4, 746.0], [54.5, 747.0], [54.6, 750.0], [54.7, 755.0], [54.8, 764.0], [54.9, 766.0], [55.0, 769.0], [55.1, 770.0], [55.2, 776.0], [55.3, 780.0], [55.4, 784.0], [55.5, 785.0], [55.6, 786.0], [55.7, 787.0], [55.8, 788.0], [55.9, 789.0], [56.0, 789.0], [56.1, 789.0], [56.2, 789.0], [56.3, 792.0], [56.4, 794.0], [56.5, 797.0], [56.6, 803.0], [56.7, 820.0], [56.8, 822.0], [56.9, 832.0], [57.0, 833.0], [57.1, 835.0], [57.2, 837.0], [57.3, 850.0], [57.4, 863.0], [57.5, 865.0], [57.6, 967.0], [57.7, 1036.0], [57.8, 1059.0], [57.9, 1151.0], [58.0, 1210.0], [58.1, 1413.0], [58.2, 1421.0], [58.3, 1577.0], [58.4, 1577.0], [58.5, 1578.0], [58.6, 1579.0], [58.7, 1580.0], [58.8, 1581.0], [58.9, 1581.0], [59.0, 1581.0], [59.1, 1582.0], [59.2, 1583.0], [59.3, 1586.0], [59.4, 1587.0], [59.5, 1588.0], [59.6, 1590.0], [59.7, 2340.0], [59.8, 2479.0], [59.9, 2516.0], [60.0, 2517.0], [60.1, 3205.0], [60.2, 3599.0], [60.3, 3616.0], [60.4, 3866.0], [60.5, 4029.0], [60.6, 4087.0], [60.7, 4598.0], [60.8, 4646.0], [60.9, 5088.0], [61.0, 5292.0], [61.1, 5340.0], [61.2, 5725.0], [61.3, 6043.0], [61.4, 6436.0], [61.5, 6481.0], [61.6, 6672.0], [61.7, 6814.0], [61.8, 7169.0], [61.9, 7183.0], [62.0, 7807.0], [62.1, 7808.0], [62.2, 7809.0], [62.3, 7810.0], [62.4, 7811.0], [62.5, 7839.0], [62.6, 8026.0], [62.7, 8091.0], [62.8, 8161.0], [62.9, 8163.0], [63.0, 8163.0], [63.1, 8164.0], [63.2, 8164.0], [63.3, 8201.0], [63.4, 8201.0], [63.5, 8204.0], [63.6, 8237.0], [63.7, 8510.0], [63.8, 8511.0], [63.9, 8512.0], [64.0, 8522.0], [64.1, 8526.0], [64.2, 8538.0], [64.3, 8626.0], [64.4, 8627.0], [64.5, 8629.0], [64.6, 8630.0], [64.7, 8879.0], [64.8, 8880.0], [64.9, 8881.0], [65.0, 8890.0], [65.1, 8891.0], [65.2, 8954.0], [65.3, 8955.0], [65.4, 9239.0], [65.5, 9239.0], [65.6, 9240.0], [65.7, 9241.0], [65.8, 9265.0], [65.9, 9269.0], [66.0, 9313.0], [66.1, 9371.0], [66.2, 9372.0], [66.3, 9410.0], [66.4, 9427.0], [66.5, 9428.0], [66.6, 9430.0], [66.7, 9431.0], [66.8, 9431.0], [66.9, 9433.0], [67.0, 9434.0], [67.1, 9435.0], [67.2, 9435.0], [67.3, 9436.0], [67.4, 9437.0], [67.5, 9438.0], [67.6, 9439.0], [67.7, 9439.0], [67.8, 9440.0], [67.9, 9441.0], [68.0, 9444.0], [68.1, 9567.0], [68.2, 9594.0], [68.3, 9625.0], [68.4, 9634.0], [68.5, 9635.0], [68.6, 9640.0], [68.7, 9642.0], [68.8, 9680.0], [68.9, 9718.0], [69.0, 9719.0], [69.1, 9773.0], [69.2, 9778.0], [69.3, 9782.0], [69.4, 9832.0], [69.5, 9834.0], [69.6, 9894.0], [69.7, 9897.0], [69.8, 9898.0], [69.9, 9900.0], [70.0, 9901.0], [70.1, 9901.0], [70.2, 9902.0], [70.3, 9902.0], [70.4, 9902.0], [70.5, 9902.0], [70.6, 9902.0], [70.7, 9903.0], [70.8, 9903.0], [70.9, 9904.0], [71.0, 9904.0], [71.1, 9904.0], [71.2, 9904.0], [71.3, 9906.0], [71.4, 9906.0], [71.5, 9906.0], [71.6, 9906.0], [71.7, 9907.0], [71.8, 9907.0], [71.9, 9909.0], [72.0, 9909.0], [72.1, 9910.0], [72.2, 9910.0], [72.3, 9911.0], [72.4, 9912.0], [72.5, 9912.0], [72.6, 9912.0], [72.7, 9913.0], [72.8, 9913.0], [72.9, 9913.0], [73.0, 9913.0], [73.1, 9914.0], [73.2, 9914.0], [73.3, 9915.0], [73.4, 9916.0], [73.5, 9916.0], [73.6, 9917.0], [73.7, 9918.0], [73.8, 9918.0], [73.9, 9919.0], [74.0, 9919.0], [74.1, 9921.0], [74.2, 9922.0], [74.3, 9923.0], [74.4, 9924.0], [74.5, 9924.0], [74.6, 9926.0], [74.7, 9929.0], [74.8, 9931.0], [74.9, 9931.0], [75.0, 9931.0], [75.1, 9933.0], [75.2, 9938.0], [75.3, 9940.0], [75.4, 9941.0], [75.5, 9941.0], [75.6, 9942.0], [75.7, 9945.0], [75.8, 9947.0], [75.9, 9948.0], [76.0, 9948.0], [76.1, 9949.0], [76.2, 9950.0], [76.3, 9951.0], [76.4, 9952.0], [76.5, 9953.0], [76.6, 9954.0], [76.7, 9956.0], [76.8, 9956.0], [76.9, 9960.0], [77.0, 9961.0], [77.1, 9962.0], [77.2, 9964.0], [77.3, 9965.0], [77.4, 9967.0], [77.5, 9967.0], [77.6, 10135.0], [77.7, 10192.0], [77.8, 10252.0], [77.9, 10267.0], [78.0, 10267.0], [78.1, 10283.0], [78.2, 10284.0], [78.3, 10326.0], [78.4, 10352.0], [78.5, 10387.0], [78.6, 10389.0], [78.7, 10392.0], [78.8, 10394.0], [78.9, 10395.0], [79.0, 10397.0], [79.1, 10399.0], [79.2, 10409.0], [79.3, 10410.0], [79.4, 10412.0], [79.5, 10441.0], [79.6, 10459.0], [79.7, 10623.0], [79.8, 10624.0], [79.9, 10675.0], [80.0, 10695.0], [80.1, 10750.0], [80.2, 10752.0], [80.3, 10753.0], [80.4, 10754.0], [80.5, 10763.0], [80.6, 10822.0], [80.7, 10920.0], [80.8, 10984.0], [80.9, 11018.0], [81.0, 11055.0], [81.1, 11066.0], [81.2, 11082.0], [81.3, 11084.0], [81.4, 11087.0], [81.5, 11090.0], [81.6, 11164.0], [81.7, 11194.0], [81.8, 11195.0], [81.9, 11197.0], [82.0, 11243.0], [82.1, 11252.0], [82.2, 11257.0], [82.3, 11273.0], [82.4, 11284.0], [82.5, 11287.0], [82.6, 11298.0], [82.7, 11299.0], [82.8, 11301.0], [82.9, 11303.0], [83.0, 11305.0], [83.1, 11307.0], [83.2, 11307.0], [83.3, 11308.0], [83.4, 11310.0], [83.5, 11310.0], [83.6, 11463.0], [83.7, 11525.0], [83.8, 11528.0], [83.9, 11541.0], [84.0, 11579.0], [84.1, 11651.0], [84.2, 11670.0], [84.3, 11670.0], [84.4, 11670.0], [84.5, 11670.0], [84.6, 11671.0], [84.7, 11672.0], [84.8, 11672.0], [84.9, 11673.0], [85.0, 11673.0], [85.1, 11725.0], [85.2, 11904.0], [85.3, 12368.0], [85.4, 12378.0], [85.5, 12378.0], [85.6, 12379.0], [85.7, 12380.0], [85.8, 12547.0], [85.9, 12584.0], [86.0, 12662.0], [86.1, 12662.0], [86.2, 12664.0], [86.3, 12666.0], [86.4, 12667.0], [86.5, 12669.0], [86.6, 12671.0], [86.7, 12671.0], [86.8, 12671.0], [86.9, 12675.0], [87.0, 12675.0], [87.1, 12676.0], [87.2, 12678.0], [87.3, 12679.0], [87.4, 12680.0], [87.5, 12680.0], [87.6, 12681.0], [87.7, 12682.0], [87.8, 12683.0], [87.9, 12684.0], [88.0, 12684.0], [88.1, 12687.0], [88.2, 12689.0], [88.3, 12690.0], [88.4, 12692.0], [88.5, 12692.0], [88.6, 12693.0], [88.7, 12694.0], [88.8, 12697.0], [88.9, 12700.0], [89.0, 12700.0], [89.1, 12701.0], [89.2, 12701.0], [89.3, 12702.0], [89.4, 12704.0], [89.5, 12704.0], [89.6, 12707.0], [89.7, 12708.0], [89.8, 12709.0], [89.9, 12710.0], [90.0, 12711.0], [90.1, 12714.0], [90.2, 12715.0], [90.3, 12715.0], [90.4, 12716.0], [90.5, 12716.0], [90.6, 12716.0], [90.7, 12718.0], [90.8, 12720.0], [90.9, 12722.0], [91.0, 12722.0], [91.1, 12724.0], [91.2, 12725.0], [91.3, 12728.0], [91.4, 12730.0], [91.5, 12731.0], [91.6, 12732.0], [91.7, 12734.0], [91.8, 12735.0], [91.9, 12735.0], [92.0, 12736.0], [92.1, 12737.0], [92.2, 12738.0], [92.3, 12740.0], [92.4, 12742.0], [92.5, 12743.0], [92.6, 12746.0], [92.7, 12747.0], [92.8, 12749.0], [92.9, 12750.0], [93.0, 12750.0], [93.1, 12753.0], [93.2, 12753.0], [93.3, 12754.0], [93.4, 12754.0], [93.5, 12755.0], [93.6, 12755.0], [93.7, 12755.0], [93.8, 12756.0], [93.9, 12757.0], [94.0, 12757.0], [94.1, 12757.0], [94.2, 12758.0], [94.3, 12758.0], [94.4, 12758.0], [94.5, 12758.0], [94.6, 12758.0], [94.7, 12759.0], [94.8, 12759.0], [94.9, 12760.0], [95.0, 12760.0], [95.1, 12761.0], [95.2, 12762.0], [95.3, 12762.0], [95.4, 12762.0], [95.5, 12762.0], [95.6, 12763.0], [95.7, 12763.0], [95.8, 12764.0], [95.9, 12764.0], [96.0, 12764.0], [96.1, 12764.0], [96.2, 12765.0], [96.3, 12766.0], [96.4, 12767.0], [96.5, 12767.0], [96.6, 12769.0], [96.7, 12771.0], [96.8, 12773.0], [96.9, 12773.0], [97.0, 12773.0], [97.1, 12774.0], [97.2, 12774.0], [97.3, 12775.0], [97.4, 12775.0], [97.5, 12775.0], [97.6, 12776.0], [97.7, 12776.0], [97.8, 12777.0], [97.9, 12778.0], [98.0, 12778.0], [98.1, 12778.0], [98.2, 12779.0], [98.3, 12779.0], [98.4, 12783.0], [98.5, 12783.0], [98.6, 12784.0], [98.7, 12785.0], [98.8, 12786.0], [98.9, 12786.0], [99.0, 12787.0], [99.1, 12788.0], [99.2, 12790.0], [99.3, 12791.0], [99.4, 12897.0], [99.5, 12905.0], [99.6, 14194.0], [99.7, 14202.0], [99.8, 14322.0], [99.9, 14333.0], [100.0, 14334.0]], "isOverall": false, "label": "Create Artist", "isController": false}, {"data": [[0.0, 383.0], [0.1, 383.0], [0.2, 383.0], [0.3, 383.0], [0.4, 383.0], [0.5, 383.0], [0.6, 388.0], [0.7, 388.0], [0.8, 388.0], [0.9, 388.0], [1.0, 388.0], [1.1, 394.0], [1.2, 394.0], [1.3, 394.0], [1.4, 394.0], [1.5, 394.0], [1.6, 399.0], [1.7, 399.0], [1.8, 399.0], [1.9, 399.0], [2.0, 399.0], [2.1, 399.0], [2.2, 400.0], [2.3, 400.0], [2.4, 400.0], [2.5, 400.0], [2.6, 400.0], [2.7, 533.0], [2.8, 533.0], [2.9, 533.0], [3.0, 533.0], [3.1, 533.0], [3.2, 746.0], [3.3, 746.0], [3.4, 746.0], [3.5, 746.0], [3.6, 746.0], [3.7, 746.0], [3.8, 1500.0], [3.9, 1500.0], [4.0, 1500.0], [4.1, 1500.0], [4.2, 1500.0], [4.3, 2164.0], [4.4, 2164.0], [4.5, 2164.0], [4.6, 2164.0], [4.7, 2164.0], [4.8, 3260.0], [4.9, 3260.0], [5.0, 3260.0], [5.1, 3260.0], [5.2, 3260.0], [5.3, 3260.0], [5.4, 3260.0], [5.5, 3260.0], [5.6, 3260.0], [5.7, 3260.0], [5.8, 3260.0], [5.9, 5354.0], [6.0, 5354.0], [6.1, 5354.0], [6.2, 5354.0], [6.3, 5354.0], [6.4, 9898.0], [6.5, 9898.0], [6.6, 9898.0], [6.7, 9898.0], [6.8, 9898.0], [6.9, 9898.0], [7.0, 10667.0], [7.1, 10667.0], [7.2, 10667.0], [7.3, 10667.0], [7.4, 10667.0], [7.5, 10667.0], [7.6, 10667.0], [7.7, 10667.0], [7.8, 10667.0], [7.9, 10667.0], [8.0, 10701.0], [8.1, 10701.0], [8.2, 10701.0], [8.3, 10701.0], [8.4, 10701.0], [8.5, 10701.0], [8.6, 10716.0], [8.7, 10716.0], [8.8, 10716.0], [8.9, 10716.0], [9.0, 10716.0], [9.1, 11016.0], [9.2, 11016.0], [9.3, 11016.0], [9.4, 11016.0], [9.5, 11016.0], [9.6, 11063.0], [9.7, 11063.0], [9.8, 11063.0], [9.9, 11063.0], [10.0, 11063.0], [10.1, 11063.0], [10.2, 11667.0], [10.3, 11667.0], [10.4, 11667.0], [10.5, 11667.0], [10.6, 11667.0], [10.7, 11670.0], [10.8, 11670.0], [10.9, 11670.0], [11.0, 11670.0], [11.1, 11670.0], [11.2, 11923.0], [11.3, 11923.0], [11.4, 11923.0], [11.5, 11923.0], [11.6, 11923.0], [11.7, 11923.0], [11.8, 11932.0], [11.9, 11932.0], [12.0, 11932.0], [12.1, 11932.0], [12.2, 11932.0], [12.3, 11993.0], [12.4, 11993.0], [12.5, 11993.0], [12.6, 11993.0], [12.7, 11993.0], [12.8, 12104.0], [12.9, 12104.0], [13.0, 12104.0], [13.1, 12104.0], [13.2, 12104.0], [13.3, 12127.0], [13.4, 12127.0], [13.5, 12127.0], [13.6, 12127.0], [13.7, 12127.0], [13.8, 12127.0], [13.9, 12189.0], [14.0, 12189.0], [14.1, 12189.0], [14.2, 12189.0], [14.3, 12189.0], [14.4, 12262.0], [14.5, 12262.0], [14.6, 12262.0], [14.7, 12262.0], [14.8, 12262.0], [14.9, 12281.0], [15.0, 12281.0], [15.1, 12281.0], [15.2, 12281.0], [15.3, 12281.0], [15.4, 12281.0], [15.5, 12290.0], [15.6, 12290.0], [15.7, 12290.0], [15.8, 12290.0], [15.9, 12290.0], [16.0, 12306.0], [16.1, 12306.0], [16.2, 12306.0], [16.3, 12306.0], [16.4, 12306.0], [16.5, 12311.0], [16.6, 12311.0], [16.7, 12311.0], [16.8, 12311.0], [16.9, 12311.0], [17.0, 12311.0], [17.1, 12312.0], [17.2, 12312.0], [17.3, 12312.0], [17.4, 12312.0], [17.5, 12312.0], [17.6, 12313.0], [17.7, 12313.0], [17.8, 12313.0], [17.9, 12313.0], [18.0, 12313.0], [18.1, 12313.0], [18.2, 12313.0], [18.3, 12313.0], [18.4, 12313.0], [18.5, 12313.0], [18.6, 12313.0], [18.7, 12321.0], [18.8, 12321.0], [18.9, 12321.0], [19.0, 12321.0], [19.1, 12321.0], [19.2, 12322.0], [19.3, 12322.0], [19.4, 12322.0], [19.5, 12322.0], [19.6, 12322.0], [19.7, 12342.0], [19.8, 12342.0], [19.9, 12342.0], [20.0, 12342.0], [20.1, 12342.0], [20.2, 12342.0], [20.3, 12347.0], [20.4, 12347.0], [20.5, 12347.0], [20.6, 12347.0], [20.7, 12347.0], [20.8, 12391.0], [20.9, 12391.0], [21.0, 12391.0], [21.1, 12391.0], [21.2, 12391.0], [21.3, 12473.0], [21.4, 12473.0], [21.5, 12473.0], [21.6, 12473.0], [21.7, 12473.0], [21.8, 12473.0], [21.9, 12487.0], [22.0, 12487.0], [22.1, 12487.0], [22.2, 12487.0], [22.3, 12487.0], [22.4, 12496.0], [22.5, 12496.0], [22.6, 12496.0], [22.7, 12496.0], [22.8, 12496.0], [22.9, 12497.0], [23.0, 12497.0], [23.1, 12497.0], [23.2, 12497.0], [23.3, 12497.0], [23.4, 12497.0], [23.5, 12498.0], [23.6, 12498.0], [23.7, 12498.0], [23.8, 12498.0], [23.9, 12498.0], [24.0, 12503.0], [24.1, 12503.0], [24.2, 12503.0], [24.3, 12503.0], [24.4, 12503.0], [24.5, 12506.0], [24.6, 12506.0], [24.7, 12506.0], [24.8, 12506.0], [24.9, 12506.0], [25.0, 12507.0], [25.1, 12507.0], [25.2, 12507.0], [25.3, 12507.0], [25.4, 12507.0], [25.5, 12507.0], [25.6, 12509.0], [25.7, 12509.0], [25.8, 12509.0], [25.9, 12509.0], [26.0, 12509.0], [26.1, 12509.0], [26.2, 12509.0], [26.3, 12509.0], [26.4, 12509.0], [26.5, 12509.0], [26.6, 12509.0], [26.7, 12509.0], [26.8, 12509.0], [26.9, 12509.0], [27.0, 12509.0], [27.1, 12509.0], [27.2, 12509.0], [27.3, 12509.0], [27.4, 12509.0], [27.5, 12509.0], [27.6, 12509.0], [27.7, 12514.0], [27.8, 12514.0], [27.9, 12514.0], [28.0, 12514.0], [28.1, 12514.0], [28.2, 12516.0], [28.3, 12516.0], [28.4, 12516.0], [28.5, 12516.0], [28.6, 12516.0], [28.7, 12516.0], [28.8, 12521.0], [28.9, 12521.0], [29.0, 12521.0], [29.1, 12521.0], [29.2, 12521.0], [29.3, 12522.0], [29.4, 12522.0], [29.5, 12522.0], [29.6, 12522.0], [29.7, 12522.0], [29.8, 12523.0], [29.9, 12523.0], [30.0, 12523.0], [30.1, 12523.0], [30.2, 12523.0], [30.3, 12523.0], [30.4, 12525.0], [30.5, 12525.0], [30.6, 12525.0], [30.7, 12525.0], [30.8, 12525.0], [30.9, 12525.0], [31.0, 12525.0], [31.1, 12525.0], [31.2, 12525.0], [31.3, 12525.0], [31.4, 12542.0], [31.5, 12542.0], [31.6, 12542.0], [31.7, 12542.0], [31.8, 12542.0], [31.9, 12542.0], [32.0, 12565.0], [32.1, 12565.0], [32.2, 12565.0], [32.3, 12565.0], [32.4, 12565.0], [32.5, 12661.0], [32.6, 12661.0], [32.7, 12661.0], [32.8, 12661.0], [32.9, 12661.0], [33.0, 12668.0], [33.1, 12668.0], [33.2, 12668.0], [33.3, 12668.0], [33.4, 12668.0], [33.5, 12668.0], [33.6, 12668.0], [33.7, 12668.0], [33.8, 12668.0], [33.9, 12668.0], [34.0, 12668.0], [34.1, 12688.0], [34.2, 12688.0], [34.3, 12688.0], [34.4, 12688.0], [34.5, 12688.0], [34.6, 12688.0], [34.7, 12688.0], [34.8, 12688.0], [34.9, 12688.0], [35.0, 12688.0], [35.1, 12688.0], [35.2, 12688.0], [35.3, 12688.0], [35.4, 12688.0], [35.5, 12688.0], [35.6, 12688.0], [35.7, 12688.0], [35.8, 12688.0], [35.9, 12688.0], [36.0, 12688.0], [36.1, 12688.0], [36.2, 12689.0], [36.3, 12689.0], [36.4, 12689.0], [36.5, 12689.0], [36.6, 12689.0], [36.7, 12689.0], [36.8, 12689.0], [36.9, 12689.0], [37.0, 12689.0], [37.1, 12689.0], [37.2, 12689.0], [37.3, 12689.0], [37.4, 12689.0], [37.5, 12689.0], [37.6, 12689.0], [37.7, 12689.0], [37.8, 12689.0], [37.9, 12689.0], [38.0, 12689.0], [38.1, 12689.0], [38.2, 12689.0], [38.3, 12689.0], [38.4, 12689.0], [38.5, 12689.0], [38.6, 12689.0], [38.7, 12689.0], [38.8, 12689.0], [38.9, 12712.0], [39.0, 12712.0], [39.1, 12712.0], [39.2, 12712.0], [39.3, 12712.0], [39.4, 12716.0], [39.5, 12716.0], [39.6, 12716.0], [39.7, 12716.0], [39.8, 12716.0], [39.9, 12718.0], [40.0, 12718.0], [40.1, 12718.0], [40.2, 12718.0], [40.3, 12718.0], [40.4, 12718.0], [40.5, 12752.0], [40.6, 12752.0], [40.7, 12752.0], [40.8, 12752.0], [40.9, 12752.0], [41.0, 12752.0], [41.1, 12752.0], [41.2, 12752.0], [41.3, 12752.0], [41.4, 12752.0], [41.5, 12758.0], [41.6, 12758.0], [41.7, 12758.0], [41.8, 12758.0], [41.9, 12758.0], [42.0, 12758.0], [42.1, 12776.0], [42.2, 12776.0], [42.3, 12776.0], [42.4, 12776.0], [42.5, 12776.0], [42.6, 12779.0], [42.7, 12779.0], [42.8, 12779.0], [42.9, 12779.0], [43.0, 12779.0], [43.1, 12796.0], [43.2, 12796.0], [43.3, 12796.0], [43.4, 12796.0], [43.5, 12796.0], [43.6, 12796.0], [43.7, 12807.0], [43.8, 12807.0], [43.9, 12807.0], [44.0, 12807.0], [44.1, 12807.0], [44.2, 12812.0], [44.3, 12812.0], [44.4, 12812.0], [44.5, 12812.0], [44.6, 12812.0], [44.7, 12814.0], [44.8, 12814.0], [44.9, 12814.0], [45.0, 12814.0], [45.1, 12814.0], [45.2, 12814.0], [45.3, 12814.0], [45.4, 12814.0], [45.5, 12814.0], [45.6, 12814.0], [45.7, 12814.0], [45.8, 12815.0], [45.9, 12815.0], [46.0, 12815.0], [46.1, 12815.0], [46.2, 12815.0], [46.3, 12816.0], [46.4, 12816.0], [46.5, 12816.0], [46.6, 12816.0], [46.7, 12816.0], [46.8, 12816.0], [46.9, 12817.0], [47.0, 12817.0], [47.1, 12817.0], [47.2, 12817.0], [47.3, 12817.0], [47.4, 12817.0], [47.5, 12817.0], [47.6, 12817.0], [47.7, 12817.0], [47.8, 12817.0], [47.9, 12820.0], [48.0, 12820.0], [48.1, 12820.0], [48.2, 12820.0], [48.3, 12820.0], [48.4, 12820.0], [48.5, 12821.0], [48.6, 12821.0], [48.7, 12821.0], [48.8, 12821.0], [48.9, 12821.0], [49.0, 12821.0], [49.1, 12821.0], [49.2, 12821.0], [49.3, 12821.0], [49.4, 12821.0], [49.5, 12827.0], [49.6, 12827.0], [49.7, 12827.0], [49.8, 12827.0], [49.9, 12827.0], [50.0, 12827.0], [50.1, 12827.0], [50.2, 12827.0], [50.3, 12827.0], [50.4, 12827.0], [50.5, 12827.0], [50.6, 12829.0], [50.7, 12829.0], [50.8, 12829.0], [50.9, 12829.0], [51.0, 12829.0], [51.1, 12845.0], [51.2, 12845.0], [51.3, 12845.0], [51.4, 12845.0], [51.5, 12845.0], [51.6, 12850.0], [51.7, 12850.0], [51.8, 12850.0], [51.9, 12850.0], [52.0, 12850.0], [52.1, 12850.0], [52.2, 12861.0], [52.3, 12861.0], [52.4, 12861.0], [52.5, 12861.0], [52.6, 12861.0], [52.7, 12863.0], [52.8, 12863.0], [52.9, 12863.0], [53.0, 12863.0], [53.1, 12863.0], [53.2, 12882.0], [53.3, 12882.0], [53.4, 12882.0], [53.5, 12882.0], [53.6, 12882.0], [53.7, 12882.0], [53.8, 12882.0], [53.9, 12882.0], [54.0, 12882.0], [54.1, 12882.0], [54.2, 12882.0], [54.3, 12882.0], [54.4, 12882.0], [54.5, 12882.0], [54.6, 12882.0], [54.7, 12882.0], [54.8, 12885.0], [54.9, 12885.0], [55.0, 12885.0], [55.1, 12885.0], [55.2, 12885.0], [55.3, 12885.0], [55.4, 12885.0], [55.5, 12885.0], [55.6, 12885.0], [55.7, 12885.0], [55.8, 12885.0], [55.9, 12885.0], [56.0, 12885.0], [56.1, 12885.0], [56.2, 12885.0], [56.3, 12885.0], [56.4, 12886.0], [56.5, 12886.0], [56.6, 12886.0], [56.7, 12886.0], [56.8, 12886.0], [56.9, 12886.0], [57.0, 12886.0], [57.1, 12886.0], [57.2, 12886.0], [57.3, 12886.0], [57.4, 12886.0], [57.5, 12886.0], [57.6, 12886.0], [57.7, 12886.0], [57.8, 12886.0], [57.9, 12886.0], [58.0, 12886.0], [58.1, 12886.0], [58.2, 12886.0], [58.3, 12886.0], [58.4, 12886.0], [58.5, 12886.0], [58.6, 12887.0], [58.7, 12887.0], [58.8, 12887.0], [58.9, 12887.0], [59.0, 12887.0], [59.1, 12888.0], [59.2, 12888.0], [59.3, 12888.0], [59.4, 12888.0], [59.5, 12888.0], [59.6, 12901.0], [59.7, 12901.0], [59.8, 12901.0], [59.9, 12901.0], [60.0, 12901.0], [60.1, 12901.0], [60.2, 13001.0], [60.3, 13001.0], [60.4, 13001.0], [60.5, 13001.0], [60.6, 13001.0], [60.7, 13002.0], [60.8, 13002.0], [60.9, 13002.0], [61.0, 13002.0], [61.1, 13002.0], [61.2, 13002.0], [61.3, 13002.0], [61.4, 13002.0], [61.5, 13002.0], [61.6, 13002.0], [61.7, 13002.0], [61.8, 13002.0], [61.9, 13002.0], [62.0, 13002.0], [62.1, 13002.0], [62.2, 13002.0], [62.3, 13003.0], [62.4, 13003.0], [62.5, 13003.0], [62.6, 13003.0], [62.7, 13003.0], [62.8, 13009.0], [62.9, 13009.0], [63.0, 13009.0], [63.1, 13009.0], [63.2, 13009.0], [63.3, 13009.0], [63.4, 13009.0], [63.5, 13009.0], [63.6, 13009.0], [63.7, 13009.0], [63.8, 13009.0], [63.9, 13009.0], [64.0, 13009.0], [64.1, 13009.0], [64.2, 13009.0], [64.3, 13009.0], [64.4, 13017.0], [64.5, 13017.0], [64.6, 13017.0], [64.7, 13017.0], [64.8, 13017.0], [64.9, 13018.0], [65.0, 13018.0], [65.1, 13018.0], [65.2, 13018.0], [65.3, 13018.0], [65.4, 13018.0], [65.5, 13018.0], [65.6, 13018.0], [65.7, 13018.0], [65.8, 13018.0], [65.9, 13018.0], [66.0, 13052.0], [66.1, 13052.0], [66.2, 13052.0], [66.3, 13052.0], [66.4, 13052.0], [66.5, 13061.0], [66.6, 13061.0], [66.7, 13061.0], [66.8, 13061.0], [66.9, 13061.0], [67.0, 13061.0], [67.1, 13062.0], [67.2, 13062.0], [67.3, 13062.0], [67.4, 13062.0], [67.5, 13062.0], [67.6, 13063.0], [67.7, 13063.0], [67.8, 13063.0], [67.9, 13063.0], [68.0, 13063.0], [68.1, 13063.0], [68.2, 13063.0], [68.3, 13063.0], [68.4, 13063.0], [68.5, 13063.0], [68.6, 13063.0], [68.7, 13063.0], [68.8, 13063.0], [68.9, 13063.0], [69.0, 13063.0], [69.1, 13063.0], [69.2, 13063.0], [69.3, 13063.0], [69.4, 13063.0], [69.5, 13063.0], [69.6, 13063.0], [69.7, 13064.0], [69.8, 13064.0], [69.9, 13064.0], [70.0, 13064.0], [70.1, 13064.0], [70.2, 13064.0], [70.3, 13065.0], [70.4, 13065.0], [70.5, 13065.0], [70.6, 13065.0], [70.7, 13065.0], [70.8, 13067.0], [70.9, 13067.0], [71.0, 13067.0], [71.1, 13067.0], [71.2, 13067.0], [71.3, 13076.0], [71.4, 13076.0], [71.5, 13076.0], [71.6, 13076.0], [71.7, 13076.0], [71.8, 13076.0], [71.9, 13110.0], [72.0, 13110.0], [72.1, 13110.0], [72.2, 13110.0], [72.3, 13110.0], [72.4, 13112.0], [72.5, 13112.0], [72.6, 13112.0], [72.7, 13112.0], [72.8, 13112.0], [72.9, 13112.0], [73.0, 13112.0], [73.1, 13112.0], [73.2, 13112.0], [73.3, 13112.0], [73.4, 13112.0], [73.5, 13113.0], [73.6, 13113.0], [73.7, 13113.0], [73.8, 13113.0], [73.9, 13113.0], [74.0, 13138.0], [74.1, 13138.0], [74.2, 13138.0], [74.3, 13138.0], [74.4, 13138.0], [74.5, 13142.0], [74.6, 13142.0], [74.7, 13142.0], [74.8, 13142.0], [74.9, 13142.0], [75.0, 13142.0], [75.1, 13145.0], [75.2, 13145.0], [75.3, 13145.0], [75.4, 13145.0], [75.5, 13145.0], [75.6, 13145.0], [75.7, 13145.0], [75.8, 13145.0], [75.9, 13145.0], [76.0, 13145.0], [76.1, 13193.0], [76.2, 13193.0], [76.3, 13193.0], [76.4, 13193.0], [76.5, 13193.0], [76.6, 13193.0], [76.7, 13193.0], [76.8, 13193.0], [76.9, 13193.0], [77.0, 13193.0], [77.1, 13193.0], [77.2, 13196.0], [77.3, 13196.0], [77.4, 13196.0], [77.5, 13196.0], [77.6, 13196.0], [77.7, 13196.0], [77.8, 13196.0], [77.9, 13196.0], [78.0, 13196.0], [78.1, 13196.0], [78.2, 13199.0], [78.3, 13199.0], [78.4, 13199.0], [78.5, 13199.0], [78.6, 13199.0], [78.7, 13199.0], [78.8, 13200.0], [78.9, 13200.0], [79.0, 13200.0], [79.1, 13200.0], [79.2, 13200.0], [79.3, 13200.0], [79.4, 13200.0], [79.5, 13200.0], [79.6, 13200.0], [79.7, 13200.0], [79.8, 13202.0], [79.9, 13202.0], [80.0, 13202.0], [80.1, 13202.0], [80.2, 13202.0], [80.3, 13202.0], [80.4, 13203.0], [80.5, 13203.0], [80.6, 13203.0], [80.7, 13203.0], [80.8, 13203.0], [80.9, 13203.0], [81.0, 13203.0], [81.1, 13203.0], [81.2, 13203.0], [81.3, 13203.0], [81.4, 13221.0], [81.5, 13221.0], [81.6, 13221.0], [81.7, 13221.0], [81.8, 13221.0], [81.9, 13221.0], [82.0, 13235.0], [82.1, 13235.0], [82.2, 13235.0], [82.3, 13235.0], [82.4, 13235.0], [82.5, 13237.0], [82.6, 13237.0], [82.7, 13237.0], [82.8, 13237.0], [82.9, 13237.0], [83.0, 13244.0], [83.1, 13244.0], [83.2, 13244.0], [83.3, 13244.0], [83.4, 13244.0], [83.5, 13244.0], [83.6, 13259.0], [83.7, 13259.0], [83.8, 13259.0], [83.9, 13259.0], [84.0, 13259.0], [84.1, 13397.0], [84.2, 13397.0], [84.3, 13397.0], [84.4, 13397.0], [84.5, 13397.0], [84.6, 13397.0], [84.7, 13397.0], [84.8, 13397.0], [84.9, 13397.0], [85.0, 13397.0], [85.1, 13397.0], [85.2, 13398.0], [85.3, 13398.0], [85.4, 13398.0], [85.5, 13398.0], [85.6, 13398.0], [85.7, 13398.0], [85.8, 13398.0], [85.9, 13398.0], [86.0, 13398.0], [86.1, 13398.0], [86.2, 13398.0], [86.3, 13398.0], [86.4, 13398.0], [86.5, 13398.0], [86.6, 13398.0], [86.7, 13398.0], [86.8, 13399.0], [86.9, 13399.0], [87.0, 13399.0], [87.1, 13399.0], [87.2, 13399.0], [87.3, 13399.0], [87.4, 13399.0], [87.5, 13399.0], [87.6, 13399.0], [87.7, 13399.0], [87.8, 13401.0], [87.9, 13401.0], [88.0, 13401.0], [88.1, 13401.0], [88.2, 13401.0], [88.3, 13402.0], [88.4, 13402.0], [88.5, 13402.0], [88.6, 13402.0], [88.7, 13402.0], [88.8, 13402.0], [88.9, 13402.0], [89.0, 13402.0], [89.1, 13402.0], [89.2, 13402.0], [89.3, 13402.0], [89.4, 13402.0], [89.5, 13402.0], [89.6, 13402.0], [89.7, 13402.0], [89.8, 13402.0], [89.9, 13403.0], [90.0, 13403.0], [90.1, 13403.0], [90.2, 13403.0], [90.3, 13403.0], [90.4, 13403.0], [90.5, 13403.0], [90.6, 13403.0], [90.7, 13403.0], [90.8, 13403.0], [90.9, 13403.0], [91.0, 13403.0], [91.1, 13403.0], [91.2, 13403.0], [91.3, 13403.0], [91.4, 13403.0], [91.5, 13404.0], [91.6, 13404.0], [91.7, 13404.0], [91.8, 13404.0], [91.9, 13404.0], [92.0, 13404.0], [92.1, 13404.0], [92.2, 13404.0], [92.3, 13404.0], [92.4, 13404.0], [92.5, 13404.0], [92.6, 13405.0], [92.7, 13405.0], [92.8, 13405.0], [92.9, 13405.0], [93.0, 13405.0], [93.1, 13405.0], [93.2, 13405.0], [93.3, 13405.0], [93.4, 13405.0], [93.5, 13405.0], [93.6, 13405.0], [93.7, 13432.0], [93.8, 13432.0], [93.9, 13432.0], [94.0, 13432.0], [94.1, 13432.0], [94.2, 13507.0], [94.3, 13507.0], [94.4, 13507.0], [94.5, 13507.0], [94.6, 13507.0], [94.7, 13524.0], [94.8, 13524.0], [94.9, 13524.0], [95.0, 13524.0], [95.1, 13524.0], [95.2, 13524.0], [95.3, 13525.0], [95.4, 13525.0], [95.5, 13525.0], [95.6, 13525.0], [95.7, 13525.0], [95.8, 13525.0], [95.9, 13525.0], [96.0, 13525.0], [96.1, 13525.0], [96.2, 13525.0], [96.3, 13528.0], [96.4, 13528.0], [96.5, 13528.0], [96.6, 13528.0], [96.7, 13528.0], [96.8, 13528.0], [96.9, 13530.0], [97.0, 13530.0], [97.1, 13530.0], [97.2, 13530.0], [97.3, 13530.0], [97.4, 13530.0], [97.5, 13530.0], [97.6, 13530.0], [97.7, 13530.0], [97.8, 13530.0], [97.9, 13564.0], [98.0, 13564.0], [98.1, 13564.0], [98.2, 13564.0], [98.3, 13564.0], [98.4, 13564.0], [98.5, 13565.0], [98.6, 13565.0], [98.7, 13565.0], [98.8, 13565.0], [98.9, 13565.0], [99.0, 13579.0], [99.1, 13579.0], [99.2, 13579.0], [99.3, 13579.0], [99.4, 13579.0], [99.5, 13605.0], [99.6, 13605.0], [99.7, 13605.0], [99.8, 13605.0], [99.9, 13605.0], [100.0, 13605.0]], "isOverall": false, "label": "Read Artist One", "isController": false}, {"data": [[0.0, 352.0], [0.1, 358.0], [0.2, 373.0], [0.3, 380.0], [0.4, 380.0], [0.5, 381.0], [0.6, 384.0], [0.7, 391.0], [0.8, 391.0], [0.9, 393.0], [1.0, 393.0], [1.1, 393.0], [1.2, 397.0], [1.3, 422.0], [1.4, 473.0], [1.5, 476.0], [1.6, 487.0], [1.7, 512.0], [1.8, 514.0], [1.9, 517.0], [2.0, 532.0], [2.1, 532.0], [2.2, 532.0], [2.3, 533.0], [2.4, 624.0], [2.5, 630.0], [2.6, 646.0], [2.7, 708.0], [2.8, 729.0], [2.9, 737.0], [3.0, 743.0], [3.1, 744.0], [3.2, 744.0], [3.3, 745.0], [3.4, 751.0], [3.5, 751.0], [3.6, 759.0], [3.7, 760.0], [3.8, 777.0], [3.9, 783.0], [4.0, 785.0], [4.1, 788.0], [4.2, 789.0], [4.3, 802.0], [4.4, 809.0], [4.5, 813.0], [4.6, 883.0], [4.7, 950.0], [4.8, 955.0], [4.9, 977.0], [5.0, 981.0], [5.1, 988.0], [5.2, 988.0], [5.3, 990.0], [5.4, 995.0], [5.5, 996.0], [5.6, 1060.0], [5.7, 1092.0], [5.8, 1092.0], [5.9, 1093.0], [6.0, 1126.0], [6.1, 1134.0], [6.2, 1136.0], [6.3, 1156.0], [6.4, 1172.0], [6.5, 1172.0], [6.6, 1173.0], [6.7, 1180.0], [6.8, 1180.0], [6.9, 1186.0], [7.0, 1187.0], [7.1, 1187.0], [7.2, 1189.0], [7.3, 1190.0], [7.4, 1231.0], [7.5, 1364.0], [7.6, 1364.0], [7.7, 1377.0], [7.8, 1377.0], [7.9, 1378.0], [8.0, 1379.0], [8.1, 1380.0], [8.2, 1386.0], [8.3, 1390.0], [8.4, 1405.0], [8.5, 1431.0], [8.6, 1433.0], [8.7, 1484.0], [8.8, 1527.0], [8.9, 1531.0], [9.0, 1532.0], [9.1, 1540.0], [9.2, 1554.0], [9.3, 1554.0], [9.4, 1559.0], [9.5, 1561.0], [9.6, 1561.0], [9.7, 1566.0], [9.8, 1571.0], [9.9, 1577.0], [10.0, 1577.0], [10.1, 1627.0], [10.2, 1633.0], [10.3, 1647.0], [10.4, 1754.0], [10.5, 1770.0], [10.6, 1770.0], [10.7, 1771.0], [10.8, 1773.0], [10.9, 1773.0], [11.0, 1777.0], [11.1, 1780.0], [11.2, 1819.0], [11.3, 1822.0], [11.4, 1833.0], [11.5, 1863.0], [11.6, 1864.0], [11.7, 1865.0], [11.8, 1872.0], [11.9, 1892.0], [12.0, 1949.0], [12.1, 1966.0], [12.2, 1967.0], [12.3, 1967.0], [12.4, 1971.0], [12.5, 1971.0], [12.6, 1972.0], [12.7, 1972.0], [12.8, 1972.0], [12.9, 1972.0], [13.0, 2125.0], [13.1, 2147.0], [13.2, 2162.0], [13.3, 2166.0], [13.4, 2167.0], [13.5, 2170.0], [13.6, 2174.0], [13.7, 2174.0], [13.8, 2174.0], [13.9, 2175.0], [14.0, 2175.0], [14.1, 2175.0], [14.2, 2176.0], [14.3, 2200.0], [14.4, 2200.0], [14.5, 2209.0], [14.6, 2211.0], [14.7, 2222.0], [14.8, 2225.0], [14.9, 2311.0], [15.0, 2338.0], [15.1, 2361.0], [15.2, 2366.0], [15.3, 2366.0], [15.4, 2366.0], [15.5, 2372.0], [15.6, 2372.0], [15.7, 2372.0], [15.8, 2427.0], [15.9, 2477.0], [16.0, 2511.0], [16.1, 2516.0], [16.2, 2527.0], [16.3, 2537.0], [16.4, 2540.0], [16.5, 2547.0], [16.6, 2552.0], [16.7, 2552.0], [16.8, 2558.0], [16.9, 2559.0], [17.0, 2560.0], [17.1, 2561.0], [17.2, 2562.0], [17.3, 2564.0], [17.4, 2581.0], [17.5, 2654.0], [17.6, 2715.0], [17.7, 2748.0], [17.8, 2749.0], [17.9, 2755.0], [18.0, 2761.0], [18.1, 2762.0], [18.2, 2763.0], [18.3, 2766.0], [18.4, 2775.0], [18.5, 2776.0], [18.6, 2854.0], [18.7, 2860.0], [18.8, 2869.0], [18.9, 2895.0], [19.0, 2901.0], [19.1, 2906.0], [19.2, 2910.0], [19.3, 2914.0], [19.4, 2917.0], [19.5, 2928.0], [19.6, 2933.0], [19.7, 2945.0], [19.8, 2985.0], [19.9, 2988.0], [20.0, 2990.0], [20.1, 2995.0], [20.2, 2999.0], [20.3, 3004.0], [20.4, 3113.0], [20.5, 3131.0], [20.6, 3142.0], [20.7, 3149.0], [20.8, 3150.0], [20.9, 3150.0], [21.0, 3162.0], [21.1, 3166.0], [21.2, 3167.0], [21.3, 3172.0], [21.4, 3189.0], [21.5, 3203.0], [21.6, 3211.0], [21.7, 3232.0], [21.8, 3239.0], [21.9, 3249.0], [22.0, 3253.0], [22.1, 3253.0], [22.2, 3272.0], [22.3, 3327.0], [22.4, 3337.0], [22.5, 3348.0], [22.6, 3349.0], [22.7, 3355.0], [22.8, 3356.0], [22.9, 3361.0], [23.0, 3368.0], [23.1, 3370.0], [23.2, 3378.0], [23.3, 3383.0], [23.4, 3517.0], [23.5, 3529.0], [23.6, 3542.0], [23.7, 3548.0], [23.8, 3548.0], [23.9, 3550.0], [24.0, 3552.0], [24.1, 3560.0], [24.2, 3560.0], [24.3, 3561.0], [24.4, 3570.0], [24.5, 3574.0], [24.6, 3584.0], [24.7, 3599.0], [24.8, 3600.0], [24.9, 3614.0], [25.0, 3687.0], [25.1, 3721.0], [25.2, 3736.0], [25.3, 3739.0], [25.4, 3748.0], [25.5, 3750.0], [25.6, 3771.0], [25.7, 3791.0], [25.8, 3791.0], [25.9, 3804.0], [26.0, 3877.0], [26.1, 3892.0], [26.2, 3897.0], [26.3, 3924.0], [26.4, 3925.0], [26.5, 3937.0], [26.6, 3939.0], [26.7, 3958.0], [26.8, 4028.0], [26.9, 4029.0], [27.0, 4033.0], [27.1, 4042.0], [27.2, 4054.0], [27.3, 4054.0], [27.4, 4056.0], [27.5, 4059.0], [27.6, 4066.0], [27.7, 4105.0], [27.8, 4215.0], [27.9, 4220.0], [28.0, 4230.0], [28.1, 4235.0], [28.2, 4239.0], [28.3, 4245.0], [28.4, 4250.0], [28.5, 4255.0], [28.6, 4260.0], [28.7, 4261.0], [28.8, 4265.0], [28.9, 4269.0], [29.0, 4269.0], [29.1, 4272.0], [29.2, 4273.0], [29.3, 4284.0], [29.4, 4285.0], [29.5, 4306.0], [29.6, 4373.0], [29.7, 4432.0], [29.8, 4458.0], [29.9, 4458.0], [30.0, 4459.0], [30.1, 4461.0], [30.2, 4462.0], [30.3, 4462.0], [30.4, 4463.0], [30.5, 4474.0], [30.6, 4584.0], [30.7, 4596.0], [30.8, 4598.0], [30.9, 4617.0], [31.0, 4625.0], [31.1, 4633.0], [31.2, 4634.0], [31.3, 4646.0], [31.4, 4652.0], [31.5, 4654.0], [31.6, 4656.0], [31.7, 4658.0], [31.8, 4663.0], [31.9, 4665.0], [32.0, 4665.0], [32.1, 4676.0], [32.2, 4677.0], [32.3, 4738.0], [32.4, 4819.0], [32.5, 4830.0], [32.6, 4846.0], [32.7, 4848.0], [32.8, 4850.0], [32.9, 4858.0], [33.0, 4860.0], [33.1, 4864.0], [33.2, 4874.0], [33.3, 4879.0], [33.4, 4949.0], [33.5, 4958.0], [33.6, 4970.0], [33.7, 4991.0], [33.8, 4991.0], [33.9, 5004.0], [34.0, 5010.0], [34.1, 5011.0], [34.2, 5029.0], [34.3, 5040.0], [34.4, 5045.0], [34.5, 5056.0], [34.6, 5069.0], [34.7, 5071.0], [34.8, 5071.0], [34.9, 5076.0], [35.0, 5078.0], [35.1, 5090.0], [35.2, 5219.0], [35.3, 5229.0], [35.4, 5256.0], [35.5, 5259.0], [35.6, 5261.0], [35.7, 5271.0], [35.8, 5272.0], [35.9, 5277.0], [36.0, 5281.0], [36.1, 5318.0], [36.2, 5319.0], [36.3, 5326.0], [36.4, 5340.0], [36.5, 5350.0], [36.6, 5355.0], [36.7, 5389.0], [36.8, 5389.0], [36.9, 5414.0], [37.0, 5417.0], [37.1, 5465.0], [37.2, 5468.0], [37.3, 5473.0], [37.4, 5475.0], [37.5, 5478.0], [37.6, 5479.0], [37.7, 5479.0], [37.8, 5481.0], [37.9, 5487.0], [38.0, 5619.0], [38.1, 5662.0], [38.2, 5665.0], [38.3, 5685.0], [38.4, 5686.0], [38.5, 5692.0], [38.6, 5693.0], [38.7, 5693.0], [38.8, 5694.0], [38.9, 5696.0], [39.0, 5699.0], [39.1, 5701.0], [39.2, 5709.0], [39.3, 5723.0], [39.4, 5727.0], [39.5, 5753.0], [39.6, 5781.0], [39.7, 5828.0], [39.8, 5839.0], [39.9, 5861.0], [40.0, 5878.0], [40.1, 5879.0], [40.2, 5893.0], [40.3, 5893.0], [40.4, 5894.0], [40.5, 5895.0], [40.6, 5896.0], [40.7, 5897.0], [40.8, 6042.0], [40.9, 6048.0], [41.0, 6050.0], [41.1, 6058.0], [41.2, 6065.0], [41.3, 6074.0], [41.4, 6080.0], [41.5, 6080.0], [41.6, 6080.0], [41.7, 6082.0], [41.8, 6086.0], [41.9, 6088.0], [42.0, 6092.0], [42.1, 6092.0], [42.2, 6115.0], [42.3, 6116.0], [42.4, 6134.0], [42.5, 6184.0], [42.6, 6216.0], [42.7, 6250.0], [42.8, 6267.0], [42.9, 6277.0], [43.0, 6283.0], [43.1, 6284.0], [43.2, 6286.0], [43.3, 6295.0], [43.4, 6309.0], [43.5, 6392.0], [43.6, 6393.0], [43.7, 6401.0], [43.8, 6407.0], [43.9, 6412.0], [44.0, 6427.0], [44.1, 6433.0], [44.2, 6455.0], [44.3, 6462.0], [44.4, 6463.0], [44.5, 6476.0], [44.6, 6480.0], [44.7, 6480.0], [44.8, 6487.0], [44.9, 6491.0], [45.0, 6494.0], [45.1, 6504.0], [45.2, 6510.0], [45.3, 6538.0], [45.4, 6626.0], [45.5, 6661.0], [45.6, 6669.0], [45.7, 6674.0], [45.8, 6690.0], [45.9, 6694.0], [46.0, 6697.0], [46.1, 6705.0], [46.2, 6707.0], [46.3, 6745.0], [46.4, 6750.0], [46.5, 6762.0], [46.6, 6762.0], [46.7, 6789.0], [46.8, 6796.0], [46.9, 6811.0], [47.0, 6825.0], [47.1, 6835.0], [47.2, 6860.0], [47.3, 6865.0], [47.4, 6870.0], [47.5, 6877.0], [47.6, 6889.0], [47.7, 6889.0], [47.8, 6890.0], [47.9, 6892.0], [48.0, 6893.0], [48.1, 6893.0], [48.2, 7070.0], [48.3, 7075.0], [48.4, 7077.0], [48.5, 7087.0], [48.6, 7091.0], [48.7, 7096.0], [48.8, 7097.0], [48.9, 7097.0], [49.0, 7099.0], [49.1, 7100.0], [49.2, 7106.0], [49.3, 7111.0], [49.4, 7139.0], [49.5, 7146.0], [49.6, 7167.0], [49.7, 7168.0], [49.8, 7183.0], [49.9, 7223.0], [50.0, 7242.0], [50.1, 7249.0], [50.2, 7260.0], [50.3, 7273.0], [50.4, 7290.0], [50.5, 7292.0], [50.6, 7300.0], [50.7, 7304.0], [50.8, 7305.0], [50.9, 7424.0], [51.0, 7452.0], [51.1, 7457.0], [51.2, 7463.0], [51.3, 7468.0], [51.4, 7469.0], [51.5, 7469.0], [51.6, 7491.0], [51.7, 7493.0], [51.8, 7493.0], [51.9, 7498.0], [52.0, 7500.0], [52.1, 7504.0], [52.2, 7510.0], [52.3, 7514.0], [52.4, 7522.0], [52.5, 7522.0], [52.6, 7541.0], [52.7, 7596.0], [52.8, 7635.0], [52.9, 7664.0], [53.0, 7674.0], [53.1, 7707.0], [53.2, 7707.0], [53.3, 7710.0], [53.4, 7713.0], [53.5, 7713.0], [53.6, 7727.0], [53.7, 7810.0], [53.8, 7811.0], [53.9, 7813.0], [54.0, 7818.0], [54.1, 7842.0], [54.2, 7846.0], [54.3, 7846.0], [54.4, 7867.0], [54.5, 7868.0], [54.6, 7873.0], [54.7, 7899.0], [54.8, 7903.0], [54.9, 7906.0], [55.0, 7909.0], [55.1, 7910.0], [55.2, 7914.0], [55.3, 7915.0], [55.4, 7929.0], [55.5, 7943.0], [55.6, 8055.0], [55.7, 8070.0], [55.8, 8091.0], [55.9, 8096.0], [56.0, 8100.0], [56.1, 8110.0], [56.2, 8111.0], [56.3, 8112.0], [56.4, 8130.0], [56.5, 8166.0], [56.6, 8168.0], [56.7, 8169.0], [56.8, 8199.0], [56.9, 8204.0], [57.0, 8211.0], [57.1, 8213.0], [57.2, 8239.0], [57.3, 8248.0], [57.4, 8261.0], [57.5, 8283.0], [57.6, 8293.0], [57.7, 8300.0], [57.8, 8375.0], [57.9, 8377.0], [58.0, 8383.0], [58.1, 8394.0], [58.2, 8406.0], [58.3, 8522.0], [58.4, 8522.0], [58.5, 8523.0], [58.6, 8524.0], [58.7, 8525.0], [58.8, 8532.0], [58.9, 8536.0], [59.0, 8550.0], [59.1, 8551.0], [59.2, 8559.0], [59.3, 8568.0], [59.4, 8579.0], [59.5, 8585.0], [59.6, 8589.0], [59.7, 8592.0], [59.8, 8595.0], [59.9, 8596.0], [60.0, 8599.0], [60.1, 8637.0], [60.2, 8731.0], [60.3, 8747.0], [60.4, 8747.0], [60.5, 8773.0], [60.6, 8783.0], [60.7, 8794.0], [60.8, 8797.0], [60.9, 8798.0], [61.0, 8808.0], [61.1, 8873.0], [61.2, 8891.0], [61.3, 8892.0], [61.4, 8895.0], [61.5, 8898.0], [61.6, 8903.0], [61.7, 8924.0], [61.8, 8935.0], [61.9, 8948.0], [62.0, 8954.0], [62.1, 8970.0], [62.2, 8972.0], [62.3, 8980.0], [62.4, 8998.0], [62.5, 9007.0], [62.6, 9008.0], [62.7, 9011.0], [62.8, 9015.0], [62.9, 9018.0], [63.0, 9164.0], [63.1, 9184.0], [63.2, 9185.0], [63.3, 9187.0], [63.4, 9197.0], [63.5, 9213.0], [63.6, 9217.0], [63.7, 9220.0], [63.8, 9223.0], [63.9, 9244.0], [64.0, 9247.0], [64.1, 9250.0], [64.2, 9263.0], [64.3, 9266.0], [64.4, 9275.0], [64.5, 9281.0], [64.6, 9325.0], [64.7, 9335.0], [64.8, 9365.0], [64.9, 9373.0], [65.0, 9378.0], [65.1, 9393.0], [65.2, 9395.0], [65.3, 9399.0], [65.4, 9402.0], [65.5, 9416.0], [65.6, 9440.0], [65.7, 9537.0], [65.8, 9557.0], [65.9, 9561.0], [66.0, 9564.0], [66.1, 9574.0], [66.2, 9589.0], [66.3, 9590.0], [66.4, 9607.0], [66.5, 9609.0], [66.6, 9609.0], [66.7, 9615.0], [66.8, 9626.0], [66.9, 9628.0], [67.0, 9629.0], [67.1, 9636.0], [67.2, 9648.0], [67.3, 9649.0], [67.4, 9688.0], [67.5, 9719.0], [67.6, 9742.0], [67.7, 9772.0], [67.8, 9772.0], [67.9, 9773.0], [68.0, 9800.0], [68.1, 9833.0], [68.2, 9840.0], [68.3, 9844.0], [68.4, 9888.0], [68.5, 9925.0], [68.6, 9971.0], [68.7, 9972.0], [68.8, 9972.0], [68.9, 9973.0], [69.0, 9975.0], [69.1, 9980.0], [69.2, 9997.0], [69.3, 10001.0], [69.4, 10002.0], [69.5, 10006.0], [69.6, 10017.0], [69.7, 10028.0], [69.8, 10041.0], [69.9, 10042.0], [70.0, 10043.0], [70.1, 10048.0], [70.2, 10072.0], [70.3, 10109.0], [70.4, 10185.0], [70.5, 10187.0], [70.6, 10187.0], [70.7, 10215.0], [70.8, 10219.0], [70.9, 10221.0], [71.0, 10222.0], [71.1, 10228.0], [71.2, 10238.0], [71.3, 10242.0], [71.4, 10253.0], [71.5, 10253.0], [71.6, 10261.0], [71.7, 10357.0], [71.8, 10381.0], [71.9, 10394.0], [72.0, 10396.0], [72.1, 10400.0], [72.2, 10418.0], [72.3, 10425.0], [72.4, 10432.0], [72.5, 10458.0], [72.6, 10466.0], [72.7, 10474.0], [72.8, 10475.0], [72.9, 10515.0], [73.0, 10522.0], [73.1, 10567.0], [73.2, 10605.0], [73.3, 10607.0], [73.4, 10608.0], [73.5, 10623.0], [73.6, 10630.0], [73.7, 10655.0], [73.8, 10661.0], [73.9, 10668.0], [74.0, 10674.0], [74.1, 10681.0], [74.2, 10690.0], [74.3, 10706.0], [74.4, 10714.0], [74.5, 10736.0], [74.6, 10760.0], [74.7, 10773.0], [74.8, 10776.0], [74.9, 10802.0], [75.0, 10806.0], [75.1, 10824.0], [75.2, 10824.0], [75.3, 10843.0], [75.4, 10845.0], [75.5, 10872.0], [75.6, 10879.0], [75.7, 10881.0], [75.8, 10888.0], [75.9, 10987.0], [76.0, 11022.0], [76.1, 11037.0], [76.2, 11043.0], [76.3, 11062.0], [76.4, 11065.0], [76.5, 11070.0], [76.6, 11092.0], [76.7, 11095.0], [76.8, 11098.0], [76.9, 11099.0], [77.0, 11111.0], [77.1, 11117.0], [77.2, 11131.0], [77.3, 11152.0], [77.4, 11174.0], [77.5, 11180.0], [77.6, 11205.0], [77.7, 11209.0], [77.8, 11259.0], [77.9, 11264.0], [78.0, 11265.0], [78.1, 11279.0], [78.2, 11294.0], [78.3, 11318.0], [78.4, 11319.0], [78.5, 11320.0], [78.6, 11329.0], [78.7, 11430.0], [78.8, 11466.0], [78.9, 11476.0], [79.0, 11483.0], [79.1, 11502.0], [79.2, 11503.0], [79.3, 11510.0], [79.4, 11511.0], [79.5, 11523.0], [79.6, 11524.0], [79.7, 11530.0], [79.8, 11532.0], [79.9, 11533.0], [80.0, 11533.0], [80.1, 11555.0], [80.2, 11590.0], [80.3, 11624.0], [80.4, 11627.0], [80.5, 11663.0], [80.6, 11681.0], [80.7, 11686.0], [80.8, 11688.0], [80.9, 11712.0], [81.0, 11717.0], [81.1, 11741.0], [81.2, 11751.0], [81.3, 11752.0], [81.4, 11752.0], [81.5, 11895.0], [81.6, 11895.0], [81.7, 11918.0], [81.8, 11924.0], [81.9, 11925.0], [82.0, 11944.0], [82.1, 11945.0], [82.2, 11952.0], [82.3, 11956.0], [82.4, 11960.0], [82.5, 11969.0], [82.6, 11976.0], [82.7, 11983.0], [82.8, 11984.0], [82.9, 12018.0], [83.0, 12018.0], [83.1, 12045.0], [83.2, 12082.0], [83.3, 12110.0], [83.4, 12123.0], [83.5, 12150.0], [83.6, 12162.0], [83.7, 12173.0], [83.8, 12190.0], [83.9, 12200.0], [84.0, 12207.0], [84.1, 12237.0], [84.2, 12302.0], [84.3, 12317.0], [84.4, 12336.0], [84.5, 12353.0], [84.6, 12363.0], [84.7, 12368.0], [84.8, 12371.0], [84.9, 12374.0], [85.0, 12394.0], [85.1, 12396.0], [85.2, 12406.0], [85.3, 12419.0], [85.4, 12431.0], [85.5, 12432.0], [85.6, 12432.0], [85.7, 12446.0], [85.8, 12451.0], [85.9, 12469.0], [86.0, 12531.0], [86.1, 12554.0], [86.2, 12579.0], [86.3, 12587.0], [86.4, 12593.0], [86.5, 12619.0], [86.6, 12628.0], [86.7, 12645.0], [86.8, 12653.0], [86.9, 12654.0], [87.0, 12661.0], [87.1, 12661.0], [87.2, 12670.0], [87.3, 12681.0], [87.4, 12682.0], [87.5, 12715.0], [87.6, 12715.0], [87.7, 12770.0], [87.8, 12784.0], [87.9, 12810.0], [88.0, 12817.0], [88.1, 12819.0], [88.2, 12822.0], [88.3, 12843.0], [88.4, 12845.0], [88.5, 12846.0], [88.6, 12853.0], [88.7, 12861.0], [88.8, 12874.0], [88.9, 12888.0], [89.0, 12888.0], [89.1, 12894.0], [89.2, 12897.0], [89.3, 12897.0], [89.4, 12916.0], [89.5, 12917.0], [89.6, 12934.0], [89.7, 12986.0], [89.8, 12996.0], [89.9, 13012.0], [90.0, 13025.0], [90.1, 13025.0], [90.2, 13035.0], [90.3, 13036.0], [90.4, 13036.0], [90.5, 13037.0], [90.6, 13038.0], [90.7, 13039.0], [90.8, 13039.0], [90.9, 13043.0], [91.0, 13045.0], [91.1, 13047.0], [91.2, 13054.0], [91.3, 13058.0], [91.4, 13072.0], [91.5, 13096.0], [91.6, 13099.0], [91.7, 13101.0], [91.8, 13103.0], [91.9, 13105.0], [92.0, 13105.0], [92.1, 13106.0], [92.2, 13109.0], [92.3, 13110.0], [92.4, 13115.0], [92.5, 13118.0], [92.6, 13172.0], [92.7, 13206.0], [92.8, 13219.0], [92.9, 13220.0], [93.0, 13226.0], [93.1, 13242.0], [93.2, 13262.0], [93.3, 13264.0], [93.4, 13275.0], [93.5, 13281.0], [93.6, 13287.0], [93.7, 13291.0], [93.8, 13291.0], [93.9, 13324.0], [94.0, 13324.0], [94.1, 13327.0], [94.2, 13328.0], [94.3, 13330.0], [94.4, 13331.0], [94.5, 13332.0], [94.6, 13334.0], [94.7, 13335.0], [94.8, 13336.0], [94.9, 13342.0], [95.0, 13363.0], [95.1, 13365.0], [95.2, 13430.0], [95.3, 13484.0], [95.4, 13491.0], [95.5, 13508.0], [95.6, 13515.0], [95.7, 13522.0], [95.8, 13526.0], [95.9, 13529.0], [96.0, 13534.0], [96.1, 13536.0], [96.2, 13539.0], [96.3, 13547.0], [96.4, 13555.0], [96.5, 13556.0], [96.6, 13566.0], [96.7, 13620.0], [96.8, 13642.0], [96.9, 13643.0], [97.0, 13650.0], [97.1, 13650.0], [97.2, 13679.0], [97.3, 13679.0], [97.4, 13680.0], [97.5, 13693.0], [97.6, 13724.0], [97.7, 13739.0], [97.8, 13744.0], [97.9, 13752.0], [98.0, 13779.0], [98.1, 13779.0], [98.2, 13782.0], [98.3, 13789.0], [98.4, 13798.0], [98.5, 13847.0], [98.6, 13852.0], [98.7, 13854.0], [98.8, 13867.0], [98.9, 13877.0], [99.0, 13882.0], [99.1, 13893.0], [99.2, 13954.0], [99.3, 13966.0], [99.4, 14034.0], [99.5, 14035.0], [99.6, 14038.0], [99.7, 14040.0], [99.8, 14041.0], [99.9, 14041.0]], "isOverall": false, "label": "Read Artist", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 223.0, "series": [{"data": [[12400.0, 1.0], [12700.0, 5.0], [12500.0, 2.0], [13100.0, 1.0]], "isOverall": false, "label": "Update Artist", "isController": false}, {"data": [[0.0, 72.0], [600.0, 39.0], [700.0, 54.0], [800.0, 18.0], [900.0, 2.0], [1000.0, 3.0], [1100.0, 2.0], [1200.0, 2.0], [1400.0, 4.0], [1500.0, 24.0], [1700.0, 1.0], [2300.0, 1.0], [2400.0, 3.0], [2500.0, 3.0], [3200.0, 1.0], [3500.0, 2.0], [3600.0, 3.0], [3800.0, 1.0], [4000.0, 3.0], [4200.0, 1.0], [4600.0, 2.0], [4500.0, 1.0], [5000.0, 1.0], [4900.0, 1.0], [5200.0, 1.0], [5300.0, 3.0], [5700.0, 2.0], [6000.0, 1.0], [6600.0, 1.0], [6400.0, 4.0], [6700.0, 1.0], [6800.0, 1.0], [7000.0, 1.0], [7100.0, 3.0], [7800.0, 11.0], [8100.0, 10.0], [8000.0, 3.0], [8200.0, 7.0], [8500.0, 11.0], [8600.0, 6.0], [8700.0, 1.0], [8800.0, 9.0], [8900.0, 3.0], [9200.0, 11.0], [9400.0, 32.0], [9500.0, 3.0], [9600.0, 11.0], [9700.0, 9.0], [9300.0, 6.0], [9800.0, 10.0], [10100.0, 3.0], [10200.0, 9.0], [9900.0, 137.0], [10000.0, 1.0], [10300.0, 16.0], [10400.0, 9.0], [10500.0, 1.0], [10600.0, 6.0], [10700.0, 9.0], [10800.0, 3.0], [10900.0, 4.0], [11000.0, 12.0], [11200.0, 14.0], [11100.0, 7.0], [11300.0, 15.0], [11400.0, 1.0], [11600.0, 18.0], [11500.0, 7.0], [11700.0, 2.0], [11800.0, 1.0], [11900.0, 1.0], [12200.0, 1.0], [12300.0, 8.0], [12400.0, 1.0], [12500.0, 3.0], [12700.0, 188.0], [12600.0, 53.0], [12900.0, 1.0], [12800.0, 2.0], [13000.0, 1.0], [14100.0, 1.0], [14200.0, 3.0], [14300.0, 4.0], [100.0, 133.0], [200.0, 210.0], [300.0, 223.0], [400.0, 78.0], [500.0, 209.0]], "isOverall": false, "label": "Create Artist", "isController": false}, {"data": [[9800.0, 1.0], [10700.0, 2.0], [10600.0, 2.0], [700.0, 1.0], [11000.0, 2.0], [11600.0, 2.0], [12100.0, 3.0], [11900.0, 3.0], [12200.0, 3.0], [12600.0, 12.0], [12700.0, 9.0], [12500.0, 16.0], [12300.0, 10.0], [12400.0, 5.0], [13300.0, 7.0], [13200.0, 10.0], [13100.0, 13.0], [13000.0, 22.0], [12800.0, 30.0], [12900.0, 1.0], [13400.0, 12.0], [13500.0, 10.0], [13600.0, 1.0], [1500.0, 1.0], [2100.0, 1.0], [3200.0, 2.0], [300.0, 4.0], [5300.0, 1.0], [400.0, 1.0], [500.0, 1.0]], "isOverall": false, "label": "Read Artist One", "isController": false}, {"data": [[300.0, 13.0], [400.0, 5.0], [500.0, 7.0], [600.0, 4.0], [700.0, 17.0], [800.0, 4.0], [900.0, 10.0], [1000.0, 4.0], [1100.0, 15.0], [1200.0, 1.0], [1300.0, 10.0], [1400.0, 5.0], [1500.0, 14.0], [1600.0, 3.0], [1700.0, 9.0], [1800.0, 8.0], [1900.0, 11.0], [2100.0, 14.0], [2300.0, 9.0], [2200.0, 7.0], [2400.0, 2.0], [2500.0, 17.0], [2600.0, 1.0], [2700.0, 10.0], [2800.0, 5.0], [2900.0, 14.0], [3000.0, 1.0], [3100.0, 12.0], [3300.0, 12.0], [3200.0, 8.0], [3500.0, 16.0], [3700.0, 8.0], [3600.0, 3.0], [3800.0, 5.0], [3900.0, 5.0], [4000.0, 10.0], [4100.0, 1.0], [4200.0, 18.0], [4300.0, 2.0], [4400.0, 10.0], [4600.0, 16.0], [4500.0, 3.0], [4800.0, 10.0], [4700.0, 1.0], [5000.0, 14.0], [4900.0, 6.0], [5200.0, 10.0], [5300.0, 8.0], [5400.0, 12.0], [5600.0, 12.0], [5800.0, 11.0], [5700.0, 7.0], [6000.0, 16.0], [6100.0, 4.0], [6200.0, 9.0], [6300.0, 3.0], [6400.0, 15.0], [6500.0, 3.0], [6600.0, 8.0], [6700.0, 8.0], [6800.0, 14.0], [7000.0, 10.0], [7100.0, 9.0], [7200.0, 7.0], [7300.0, 4.0], [7400.0, 12.0], [7500.0, 8.0], [7600.0, 3.0], [7700.0, 7.0], [7800.0, 12.0], [7900.0, 8.0], [8000.0, 5.0], [8100.0, 10.0], [8200.0, 8.0], [8300.0, 6.0], [8400.0, 1.0], [8500.0, 19.0], [8700.0, 9.0], [8600.0, 1.0], [8800.0, 6.0], [8900.0, 10.0], [9000.0, 5.0], [9100.0, 6.0], [9200.0, 12.0], [9300.0, 8.0], [9400.0, 4.0], [9500.0, 7.0], [9600.0, 12.0], [9700.0, 5.0], [9800.0, 6.0], [9900.0, 9.0], [10000.0, 10.0], [10100.0, 5.0], [10200.0, 10.0], [10300.0, 5.0], [10400.0, 8.0], [10500.0, 4.0], [10600.0, 12.0], [10700.0, 6.0], [10800.0, 11.0], [10900.0, 1.0], [11000.0, 11.0], [11100.0, 6.0], [11200.0, 8.0], [11300.0, 4.0], [11400.0, 5.0], [11500.0, 13.0], [11600.0, 6.0], [11700.0, 6.0], [11800.0, 3.0], [11900.0, 13.0], [12000.0, 4.0], [12100.0, 6.0], [12200.0, 4.0], [12300.0, 10.0], [12400.0, 9.0], [12500.0, 5.0], [12600.0, 11.0], [12700.0, 5.0], [12800.0, 16.0], [12900.0, 5.0], [13000.0, 20.0], [13100.0, 11.0], [13200.0, 12.0], [13300.0, 15.0], [13400.0, 3.0], [13500.0, 13.0], [13600.0, 9.0], [13700.0, 10.0], [13800.0, 8.0], [13900.0, 2.0], [14000.0, 7.0]], "isOverall": false, "label": "Read Artist", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 14300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 412.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1926.0, "series": [{"data": [[0.0, 740.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 412.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1926.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 461.06913106097016, "minX": 1.63050894E12, "maxY": 698.4603015075372, "series": [{"data": [[1.63050894E12, 698.4603015075372], [1.630509E12, 461.06913106097016]], "isOverall": false, "label": "Ultimate Spike Test", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.630509E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.75, "minX": 1.0, "maxY": 14333.5, "series": [{"data": [[33.0, 12530.0], [332.0, 12761.0], [330.0, 12762.0], [339.0, 12757.0], [182.0, 12717.0], [382.0, 12451.0], [376.0, 12765.0], [100.0, 12529.0], [53.0, 13169.0]], "isOverall": false, "label": "Update Artist", "isController": false}, {"data": [[236.33333333333334, 12715.666666666666]], "isOverall": false, "label": "Update Artist-Aggregated", "isController": false}, {"data": [[2.0, 3.0], [6.0, 2.0], [7.0, 1.75], [8.0, 2.0], [12.0, 3.0], [14.0, 14333.5], [16.0, 3.0], [18.0, 14326.0], [22.0, 14322.0], [29.0, 14203.0], [36.0, 14202.0], [49.0, 14201.0], [66.0, 14194.0], [104.0, 92.0], [106.0, 92.0], [107.0, 93.0], [108.0, 6377.5], [111.0, 12663.0], [110.0, 12662.0], [109.0, 12662.0], [115.0, 12667.0], [113.0, 12666.0], [112.0, 12664.5], [119.0, 12671.0], [118.0, 12670.0], [117.0, 12669.0], [123.0, 12671.0], [121.0, 12671.0], [127.0, 12676.0], [124.0, 12674.5], [135.0, 12677.0], [133.0, 12681.0], [130.0, 12679.0], [143.0, 12684.0], [141.0, 12683.5], [139.0, 12682.0], [138.0, 12680.666666666666], [150.0, 12691.0], [149.0, 12690.0], [148.0, 12689.0], [147.0, 12689.0], [146.0, 12687.5], [144.0, 12684.0], [159.0, 12696.666666666666], [156.0, 12694.0], [154.0, 12693.0], [153.0, 12692.0], [167.0, 12700.5], [165.0, 12702.0], [162.0, 12700.666666666666], [173.0, 12705.333333333334], [170.0, 12879.0], [169.0, 12702.5], [183.0, 12714.0], [182.0, 12712.0], [179.0, 12709.666666666666], [176.0, 12707.666666666666], [187.0, 12718.0], [186.0, 12715.0], [185.0, 12714.0], [184.0, 12715.0], [197.0, 12715.0], [196.0, 12716.0], [194.0, 12716.0], [193.0, 12777.2], [206.0, 12724.5], [204.0, 12722.0], [202.0, 12720.5], [200.0, 12716.0], [215.0, 12731.0], [214.0, 12730.0], [212.0, 12728.0], [209.0, 12724.0], [208.0, 12724.0], [223.0, 12734.0], [222.0, 12735.5], [219.0, 12732.0], [217.0, 12733.5], [230.0, 12738.333333333334], [227.0, 12737.0], [226.0, 12735.333333333334], [238.0, 12746.0], [237.0, 12746.0], [235.0, 12743.0], [233.0, 12741.5], [232.0, 12740.0], [246.0, 12752.333333333334], [243.0, 12749.333333333334], [240.0, 12747.5], [255.0, 12324.0], [254.0, 12897.0], [252.0, 12755.5], [249.0, 12754.333333333334], [268.0, 11301.0], [270.0, 11307.5], [266.0, 11305.0], [264.0, 11788.666666666666], [262.0, 12029.5], [269.0, 12765.5], [265.0, 12762.0], [260.0, 12758.0], [258.0, 12758.0], [257.0, 12757.5], [286.0, 12024.0], [287.0, 12318.0], [285.0, 11279.0], [284.0, 12773.5], [275.0, 12771.0], [283.0, 11284.0], [282.0, 12279.0], [281.0, 11287.0], [280.0, 12773.5], [278.0, 12285.0], [276.0, 11306.5], [277.0, 12771.0], [274.0, 11796.666666666666], [272.0, 12181.0], [273.0, 12768.5], [291.0, 11257.0], [303.0, 12212.666666666666], [302.0, 11066.0], [299.0, 11937.0], [298.0, 12219.0], [293.0, 11243.0], [292.0, 12778.5], [294.0, 12779.0], [290.0, 12017.0], [289.0, 12778.0], [288.0, 12777.0], [295.0, 12779.0], [301.0, 12785.5], [296.0, 12782.0], [311.0, 12187.666666666666], [319.0, 11800.0], [310.0, 10984.0], [308.0, 11018.0], [318.0, 12777.0], [317.0, 12777.0], [307.0, 12786.5], [305.0, 12784.0], [314.0, 12791.0], [313.0, 12790.0], [309.0, 12788.5], [333.0, 11690.5], [332.0, 10623.0], [323.0, 12775.0], [322.0, 12773.0], [331.0, 11692.0], [321.0, 11798.0], [320.0, 11799.5], [335.0, 12758.0], [334.0, 12757.0], [329.0, 12763.0], [327.0, 12776.0], [326.0, 12776.0], [325.0, 12775.0], [324.0, 12775.0], [338.0, 10550.0], [350.0, 10391.5], [345.0, 11983.333333333334], [343.0, 11601.0], [341.0, 10459.0], [337.0, 12759.0], [336.0, 12759.0], [351.0, 12758.0], [349.0, 12757.0], [347.0, 12755.0], [342.0, 12753.0], [354.0, 10391.5], [367.0, 11508.0], [366.0, 4824.0], [361.0, 11579.5], [363.0, 12764.0], [360.0, 11576.0], [358.0, 10389.5], [356.0, 10396.5], [357.0, 12757.5], [352.0, 10395.5], [353.0, 12759.5], [359.0, 12671.0], [365.0, 12764.0], [364.0, 12763.0], [355.0, 12761.0], [368.0, 7733.0], [379.0, 11341.0], [378.0, 12547.0], [377.0, 10186.0], [374.0, 11478.0], [372.0, 3421.0], [373.0, 12764.0], [375.0, 6564.0], [380.0, 365.0], [371.0, 12764.0], [370.0, 12763.0], [369.0, 12762.0], [381.0, 364.0], [383.0, 12270.0], [397.0, 2057.0], [396.0, 3448.333333333333], [395.0, 5726.75], [392.0, 4583.8], [393.0, 12379.0], [386.0, 215.2], [384.0, 12444.0], [387.0, 367.0], [389.0, 4306.333333333334], [390.0, 12378.0], [391.0, 12380.0], [394.0, 1120.2142857142858], [398.0, 257.1], [399.0, 230.70000000000002], [412.0, 2550.5], [411.0, 1946.2500000000002], [410.0, 150.6], [409.0, 1749.8333333333333], [408.0, 4994.0], [415.0, 1256.4545454545455], [413.0, 1630.875], [414.0, 162.14285714285714], [407.0, 1569.2857142857144], [405.0, 1836.0], [406.0, 181.15384615384613], [404.0, 180.6], [402.0, 3336.333333333333], [403.0, 216.8181818181818], [401.0, 1256.9999999999998], [400.0, 284.6666666666667], [416.0, 3202.2857142857147], [428.0, 9993.5], [424.0, 1364.090909090909], [430.0, 11669.0], [429.0, 11672.0], [425.0, 4023.3333333333335], [426.0, 5935.5], [427.0, 3201.25], [423.0, 4374.2], [418.0, 4383.4], [417.0, 3085.0], [419.0, 156.33333333333334], [420.0, 2123.5], [421.0, 3074.75], [422.0, 4091.6666666666665], [445.0, 7611.75], [446.0, 5431.25], [444.0, 5467.75], [435.0, 2178.333333333333], [442.0, 8218.75], [443.0, 3974.0], [440.0, 9858.0], [436.0, 6358.333333333334], [438.0, 11541.0], [434.0, 6205.6], [432.0, 9429.5], [433.0, 4162.666666666666], [451.0, 7157.0], [462.0, 4806.5], [461.0, 6943.333333333334], [460.0, 5700.0], [450.0, 10544.5], [448.0, 9439.0], [459.0, 10306.5], [458.0, 11194.0], [457.0, 10314.0], [456.0, 9431.0], [463.0, 5686.0], [455.0, 10341.0], [454.0, 4328.4], [453.0, 4815.0], [452.0, 4818.5], [479.0, 5630.5], [464.0, 201.0], [471.0, 11083.0], [470.0, 11087.0], [465.0, 5681.5], [472.0, 392.0], [473.0, 5644.5], [474.0, 5645.0], [475.0, 3891.6666666666665], [476.0, 5671.0], [477.0, 11081.0], [492.0, 5573.0], [481.0, 208.0], [482.0, 206.5], [483.0, 5577.0], [484.0, 394.0], [486.0, 10752.0], [485.0, 10752.0], [487.0, 10920.0], [490.0, 3786.3333333333335], [491.0, 10754.0], [493.0, 303.5], [494.0, 397.0], [495.0, 5549.0], [489.0, 10754.0], [488.0, 10752.0], [508.0, 3736.0], [500.0, 258.5], [501.0, 10668.0], [502.0, 212.5], [503.0, 212.0], [499.0, 10675.0], [497.0, 10695.0], [504.0, 5309.0], [505.0, 10412.0], [510.0, 212.0], [509.0, 10409.0], [507.0, 10409.0], [506.0, 10409.0], [540.0, 9894.0], [543.0, 9902.0], [531.0, 9920.0], [542.0, 9901.0], [541.0, 9897.0], [539.0, 9895.0], [538.0, 9901.0], [537.0, 9899.0], [536.0, 9903.0], [527.0, 10267.0], [514.0, 10326.0], [512.0, 10352.0], [516.0, 10326.0], [515.0, 10327.0], [526.0, 10267.0], [523.0, 10283.0], [522.0, 10283.0], [521.0, 10281.0], [520.0, 10284.0], [535.0, 9898.0], [534.0, 9897.0], [572.0, 9906.0], [575.0, 9907.0], [560.0, 9906.0], [563.0, 9906.0], [561.0, 9904.0], [565.0, 9906.0], [564.0, 9906.0], [574.0, 9907.0], [573.0, 9907.0], [571.0, 9906.0], [570.0, 9904.0], [569.0, 9904.0], [568.0, 9903.0], [559.0, 9902.0], [545.0, 9902.0], [544.0, 9901.0], [547.0, 9902.0], [546.0, 9902.0], [549.0, 9900.0], [548.0, 9903.0], [551.0, 9902.0], [550.0, 9901.0], [558.0, 9902.0], [557.0, 9904.0], [556.0, 9904.0], [555.0, 9904.0], [554.0, 9904.0], [553.0, 9902.0], [552.0, 9903.0], [567.0, 9906.0], [566.0, 9906.0], [605.0, 9989.0], [595.0, 9909.0], [589.0, 8292.5], [588.0, 9913.0], [587.0, 9912.0], [586.0, 9910.0], [585.0, 9910.0], [591.0, 9914.0], [576.0, 9907.0], [579.0, 9911.0], [577.0, 9911.0], [583.0, 9913.5], [581.0, 9912.5], [590.0, 9913.0], [607.0, 9918.5], [592.0, 9914.0], [594.0, 9910.0], [593.0, 9909.0], [603.0, 9915.5], [601.0, 9913.5], [599.0, 9912.5], [597.0, 9911.0], [596.0, 9910.0], [612.0, 627.1518987341772], [615.0, 550.2954545454545], [632.0, 9879.666666666666], [613.0, 5198.5], [614.0, 9918.0], [619.0, 2248.2000000000003], [637.0, 1685.4375], [622.0, 299.125], [611.0, 2409.4], [623.0, 9922.0], [609.0, 9914.0], [610.0, 9915.0], [620.0, 389.57142857142856], [618.0, 362.47368421052624], [616.0, 620.8048780487804], [617.0, 1035.5294117647059], [624.0, 158.0], [639.0, 9856.5], [626.0, 2416.777777777778], [625.0, 9924.0], [621.0, 3498.5], [636.0, 400.0], [635.0, 9930.333333333334], [634.0, 133.0], [627.0, 327.8], [628.0, 423.0], [629.0, 7597.0], [631.0, 140.5], [630.0, 155.0], [645.0, 543.5], [654.0, 222.22222222222223], [656.0, 6847.333333333333], [671.0, 6341.5], [668.0, 365.0], [667.0, 9952.5], [669.0, 9954.0], [670.0, 367.0], [666.0, 992.9999999999999], [653.0, 1662.4666666666667], [652.0, 9945.0], [650.0, 9942.0], [663.0, 1872.5], [662.0, 456.5], [661.0, 9948.0], [660.0, 9956.0], [659.0, 9950.333333333334], [641.0, 1706.4285714285716], [655.0, 9948.0], [647.0, 3975.875], [664.0, 5156.0], [665.0, 5254.0], [642.0, 311.14285714285717], [644.0, 9938.5], [643.0, 9940.0], [673.0, 6822.333333333333], [690.0, 317.0], [689.0, 2263.4], [702.0, 562.0], [699.0, 3456.3333333333335], [700.0, 560.0], [691.0, 2034.3333333333335], [692.0, 1040.3636363636363], [694.0, 1148.4], [693.0, 9640.0], [695.0, 9640.0], [672.0, 551.0], [683.0, 556.0], [684.0, 9966.0], [679.0, 559.0], [678.0, 9962.5], [677.0, 9961.0], [675.0, 9960.5], [698.0, 2734.75], [680.0, 462.5], [681.0, 9964.666666666666], [682.0, 367.3333333333333], [735.0, 1383.111111111111], [723.0, 1721.0000000000002], [722.0, 9238.0], [724.0, 2064.4], [727.0, 376.1666666666667], [726.0, 9240.5], [733.0, 118.0], [731.0, 9240.0], [729.0, 9241.0], [728.0, 9241.0], [734.0, 579.0], [707.0, 4873.5], [719.0, 567.0], [705.0, 9594.0], [716.0, 3342.3333333333335], [713.0, 9313.0], [717.0, 9269.0], [718.0, 3403.0], [708.0, 2250.2], [709.0, 4969.5], [710.0, 9372.0], [711.0, 4967.5], [741.0, 1048.4615384615386], [738.0, 702.0], [737.0, 2081.0], [736.0, 2667.25], [751.0, 3616.0], [748.0, 3854.0], [746.0, 367.3333333333333], [747.0, 3337.3333333333335], [739.0, 587.8], [742.0, 4608.0], [743.0, 8890.0], [744.0, 3418.75], [745.0, 504.66666666666663], [756.0, 658.75], [757.0, 8626.0], [759.0, 8629.0], [758.0, 8626.0], [767.0, 2232.8], [755.0, 8081.166666666666], [764.0, 2153.2], [766.0, 419.25], [761.0, 2028.6], [762.0, 8627.0], [763.0, 488.0], [760.0, 2277.6], [775.0, 2352.75], [771.0, 2036.8], [769.0, 359.5], [768.0, 8538.0], [773.0, 2356.75], [772.0, 8526.0], [779.0, 2142.4], [777.0, 8511.0], [782.0, 4519.0], [784.0, 4537.5], [788.0, 4418.5], [787.0, 8091.0], [786.0, 8237.0], [791.0, 8201.0], [790.0, 8204.0], [798.0, 614.0], [797.0, 8196.0], [794.0, 8058.0], [793.0, 8201.0], [792.0, 8201.0], [828.0, 7808.5], [800.0, 752.9215686274509], [830.0, 7809.5], [826.0, 7807.5], [805.0, 8163.0], [804.0, 8093.5], [802.0, 8162.0], [823.0, 7811.0], [819.0, 7840.0], [818.0, 7839.0], [812.0, 8164.0], [811.0, 8164.0], [808.0, 8163.666666666667], [861.0, 6814.0], [857.0, 7095.0], [849.0, 7169.5], [846.0, 7183.0], [832.0, 7809.5], [894.0, 6043.0], [879.0, 6430.0], [877.0, 6436.0], [873.0, 6481.0], [872.0, 6481.0], [866.0, 6760.0], [920.0, 5320.0], [916.0, 5340.0], [915.0, 5341.0], [902.0, 5725.0], [898.0, 5755.0], [956.0, 4029.0], [945.0, 4619.0], [941.0, 4598.0], [936.0, 4646.0], [930.0, 4999.0], [988.0, 3205.0], [976.0, 3549.0], [972.0, 3599.0], [969.0, 3616.0], [966.0, 3866.0], [1000.0, 1137.8857142857144]], "isOverall": false, "label": "Create Artist", "isController": false}, {"data": [[551.0822222222231, 4565.467777777774]], "isOverall": false, "label": "Create Artist-Aggregated", "isController": false}, {"data": [[10.0, 12178.75], [11.0, 12189.0], [12.0, 12262.0], [13.0, 12315.333333333334], [15.0, 12281.0], [16.0, 12319.333333333334], [18.0, 12506.5], [20.0, 12408.0], [21.0, 12509.0], [22.0, 12509.0], [23.0, 12509.0], [24.0, 12509.0], [25.0, 12428.0], [27.0, 12458.0], [28.0, 12581.0], [29.0, 12688.0], [30.0, 12593.5], [31.0, 12587.5], [33.0, 12688.0], [32.0, 12592.5], [35.0, 12606.5], [34.0, 12602.5], [37.0, 12638.5], [36.0, 12689.0], [39.0, 12841.0], [38.0, 12802.0], [41.0, 12851.0], [40.0, 12849.5], [43.0, 12851.5], [42.0, 12851.5], [45.0, 12873.5], [44.0, 12868.0], [47.0, 12894.0], [46.0, 12874.0], [49.0, 13064.0], [48.0, 13052.0], [51.0, 13104.0], [50.0, 13101.5], [53.0, 13063.0], [52.0, 13103.5], [55.0, 13102.5], [54.0, 13142.0], [57.0, 13149.0], [56.0, 13151.0], [59.0, 13375.5], [58.0, 13167.5], [60.0, 13432.0], [63.0, 13320.0], [62.0, 13319.0], [67.0, 13337.5], [65.0, 13321.0], [64.0, 13524.0], [70.0, 13579.0], [68.0, 13564.0], [75.0, 13530.0], [73.0, 13525.0], [72.0, 13605.0], [79.0, 12885.0], [76.0, 12888.0], [91.0, 12661.0], [89.0, 12668.0], [88.0, 12838.5], [95.0, 12807.0], [94.0, 12845.0], [98.0, 12815.333333333334], [99.0, 12497.0], [103.0, 12827.0], [101.0, 12815.0], [100.0, 12815.0], [102.0, 12521.5], [107.0, 13001.666666666666], [104.0, 12828.0], [106.0, 12532.5], [110.0, 13006.0], [108.0, 13002.0], [115.0, 13193.0], [113.0, 13015.0], [119.0, 13199.666666666666], [116.0, 13105.0], [121.0, 13199.5], [126.0, 13300.0], [124.0, 13199.5], [135.0, 13402.0], [133.0, 13400.0], [131.0, 13397.0], [130.0, 13398.5], [128.0, 13398.5], [151.0, 13403.0], [149.0, 13404.0], [148.0, 13404.0], [147.0, 13405.0], [154.0, 13401.0], [152.0, 13402.0], [193.0, 12716.0], [204.0, 10701.0], [200.0, 10667.0], [215.0, 11016.0], [208.0, 10716.0], [222.0, 11063.0], [235.0, 11667.0], [252.0, 12127.0], [294.0, 12779.0], [316.0, 12776.0], [341.0, 12752.0], [338.0, 12758.0], [409.0, 11923.0], [407.0, 11932.0], [419.0, 11670.0], [533.0, 9898.0], [736.0, 3260.0], [744.0, 388.0], [747.0, 383.0], [779.0, 394.0], [784.0, 399.0], [787.0, 400.0], [921.0, 533.0], [912.0, 5354.0], [1000.0, 1470.0]], "isOverall": false, "label": "Read Artist One", "isController": false}, {"data": [[140.30319148936175, 12079.53191489362]], "isOverall": false, "label": "Read Artist One-Aggregated", "isController": false}, {"data": [[2.0, 13172.0], [3.0, 12905.333333333334], [4.0, 13025.5], [5.0, 13025.0], [6.0, 12992.5], [7.0, 13608.0], [8.0, 14034.0], [9.0, 13854.0], [16.0, 13327.0], [17.0, 14041.0], [19.0, 13686.0], [21.0, 14041.0], [23.0, 14040.0], [24.0, 14038.0], [26.0, 13676.0], [48.0, 13287.0], [61.0, 13548.5], [60.0, 13264.0], [66.0, 13118.0], [65.0, 13120.0], [71.0, 13476.5], [70.0, 13096.0], [69.0, 13362.0], [75.0, 12996.0], [74.0, 13329.0], [73.0, 13058.0], [72.0, 13099.0], [78.0, 13215.5], [77.0, 13218.5], [79.0, 13536.0], [76.0, 13539.0], [82.0, 13199.5], [81.0, 13366.0], [80.0, 12888.0], [83.0, 13363.0], [87.0, 13412.5], [86.0, 13436.0], [85.0, 13483.5], [84.0, 13133.666666666666], [90.0, 13352.5], [91.0, 13039.0], [94.0, 13679.0], [93.0, 13460.5], [92.0, 13359.5], [95.0, 13226.0], [98.0, 12934.0], [97.0, 13025.0], [96.0, 13219.0], [103.0, 12917.0], [104.0, 12916.0], [122.0, 13650.0], [143.0, 13779.0], [142.0, 13782.0], [141.0, 13798.0], [140.0, 13893.0], [139.0, 13954.0], [138.0, 13966.0], [137.0, 13642.0], [136.0, 13643.0], [145.0, 13752.0], [144.0, 13779.0], [159.0, 13566.0], [158.0, 13650.0], [157.0, 13711.0], [156.0, 13724.0], [155.0, 13739.0], [153.0, 13744.0], [167.0, 13484.0], [166.0, 13491.0], [165.0, 13508.0], [164.0, 13515.0], [163.0, 13522.0], [162.0, 13547.0], [161.0, 13555.0], [160.0, 13556.0], [175.0, 13281.0], [174.0, 13291.0], [172.0, 13324.0], [171.0, 13330.0], [170.0, 13331.0], [169.0, 13342.0], [168.0, 13430.0], [183.0, 13072.0], [182.0, 13103.0], [181.0, 13105.0], [180.0, 13106.0], [179.0, 13115.0], [178.0, 13206.0], [177.0, 13262.0], [176.0, 13275.0], [191.0, 12885.0], [190.0, 12888.0], [189.0, 12894.0], [188.0, 12986.0], [187.0, 13039.0], [186.0, 13047.0], [185.0, 13054.0], [184.0, 13072.0], [198.0, 12761.0], [197.0, 12810.0], [196.0, 12817.0], [195.0, 12822.0], [194.0, 12846.0], [193.0, 12853.0], [192.0, 12874.0], [207.0, 12579.0], [206.0, 12587.0], [205.0, 12593.0], [204.0, 12619.0], [203.0, 12628.0], [202.0, 12645.0], [201.0, 12654.0], [200.0, 12661.0], [215.0, 12371.0], [214.0, 12394.0], [213.0, 12406.0], [212.0, 12419.0], [211.0, 12432.0], [210.0, 12431.5], [208.0, 12531.0], [223.0, 12173.0], [222.0, 12190.0], [221.0, 12200.0], [220.0, 12204.0], [219.0, 12207.0], [218.0, 12302.0], [217.0, 12353.0], [216.0, 12363.0], [231.0, 11983.0], [229.0, 11984.0], [228.0, 12082.0], [227.0, 12123.0], [226.0, 12237.0], [225.0, 12150.0], [224.0, 12162.0], [239.0, 11752.0], [238.0, 11856.0], [237.0, 11895.0], [236.0, 11918.0], [235.0, 11924.0], [234.0, 11945.0], [233.0, 11952.0], [232.0, 11969.0], [247.0, 11663.0], [246.0, 11686.0], [245.0, 11688.0], [244.0, 11712.0], [243.0, 11717.0], [242.0, 11741.0], [241.0, 11752.0], [240.0, 11751.0], [254.0, 11502.0], [253.0, 11511.0], [252.0, 11533.0], [251.0, 11524.0], [250.0, 11530.0], [249.0, 11532.0], [248.0, 11627.0], [260.0, 11329.0], [259.0, 11430.0], [258.0, 11466.0], [257.0, 11483.0], [256.0, 11488.0], [284.0, 11294.0], [280.0, 11320.0], [279.0, 11318.0], [278.0, 11319.0], [275.0, 12861.0], [301.0, 11088.0], [300.0, 11095.0], [297.0, 11098.0], [296.0, 11111.0], [295.0, 11209.0], [294.0, 11249.0], [292.0, 11259.0], [289.0, 11265.0], [288.0, 11279.0], [317.0, 10845.0], [318.0, 10844.0], [316.0, 10872.0], [315.0, 11534.333333333334], [313.0, 11866.5], [312.0, 10987.0], [309.0, 11022.0], [304.0, 11070.0], [307.0, 11037.0], [306.0, 11043.0], [305.0, 11062.0], [335.0, 10608.0], [334.0, 10623.0], [323.0, 10824.0], [322.0, 10824.0], [330.0, 10630.0], [329.0, 10655.0], [328.0, 11740.0], [327.0, 10674.0], [326.0, 10675.0], [325.0, 10773.0], [324.0, 10806.0], [348.0, 10425.0], [347.0, 10432.0], [346.0, 10458.0], [344.0, 10466.0], [342.0, 10474.0], [341.0, 10475.0], [339.0, 10567.0], [337.0, 10607.0], [336.0, 10605.0], [365.0, 10261.0], [364.0, 5351.5], [363.0, 11589.0], [362.0, 10396.0], [360.0, 10400.0], [356.0, 352.0], [366.0, 380.0], [367.0, 373.0], [371.0, 10242.0], [381.0, 11258.5], [383.0, 10042.5], [380.0, 7688.0], [378.0, 10185.0], [377.0, 12770.0], [376.0, 10187.0], [373.0, 10215.0], [372.0, 10221.0], [370.0, 10253.0], [368.0, 380.0], [386.0, 7610.666666666666], [398.0, 7530.666666666666], [394.0, 9864.0], [399.0, 12336.0], [391.0, 9844.0], [390.0, 9925.0], [389.0, 9972.0], [388.0, 11185.5], [387.0, 11202.5], [396.0, 6382.5], [385.0, 11228.5], [384.0, 10041.0], [413.0, 397.0], [415.0, 9628.0], [414.0, 10356.0], [410.0, 10831.5], [406.0, 10866.0], [405.0, 10507.0], [404.0, 12018.0], [400.0, 10639.0], [402.0, 12045.0], [401.0, 12110.0], [412.0, 11925.0], [403.0, 12018.0], [408.0, 11956.0], [425.0, 9557.0], [424.0, 9561.0], [422.0, 9564.0], [421.0, 9574.0], [420.0, 9589.5], [417.0, 9626.0], [431.0, 11681.0], [444.0, 9440.0], [447.0, 11533.0], [439.0, 11555.0], [437.0, 11590.0], [436.0, 11590.0], [432.0, 11624.0], [463.0, 9399.0], [461.0, 9393.0], [458.0, 9402.0], [449.0, 10463.0], [448.0, 10469.5], [462.0, 11205.0], [456.0, 11264.0], [453.0, 11476.0], [452.0, 11503.0], [478.0, 10055.0], [479.0, 9015.0], [477.0, 9145.0], [476.0, 9164.0], [475.0, 9184.0], [474.0, 9186.0], [472.0, 10148.0], [471.0, 9217.0], [465.0, 9373.0], [464.0, 10287.5], [467.0, 10243.5], [466.0, 10269.5], [470.0, 9216.5], [468.0, 10177.0], [469.0, 11117.0], [494.0, 9752.0], [495.0, 8747.0], [493.0, 9766.5], [492.0, 8783.0], [491.0, 8798.0], [490.0, 8797.0], [489.0, 8794.0], [488.0, 8808.0], [487.0, 8929.0], [481.0, 9925.0], [480.0, 10036.5], [483.0, 8980.0], [482.0, 9900.0], [486.0, 8948.0], [485.0, 8954.0], [484.0, 9874.0], [510.0, 9406.0], [511.0, 9385.5], [509.0, 8383.0], [508.0, 8406.0], [507.0, 8525.0], [506.0, 8532.0], [505.0, 8559.0], [504.0, 8568.0], [503.0, 9623.5], [497.0, 8731.0], [496.0, 9730.5], [499.0, 8595.0], [498.0, 9652.5], [502.0, 9633.0], [501.0, 8589.0], [500.0, 9641.0], [541.0, 7712.0], [531.0, 7915.0], [542.0, 7702.0], [528.0, 9074.0], [530.0, 9009.5], [529.0, 9071.0], [538.0, 7727.0], [537.0, 7842.0], [536.0, 7859.0], [519.0, 9312.5], [518.0, 9184.0], [517.0, 9380.5], [516.0, 8261.0], [515.0, 8283.0], [514.0, 8300.0], [513.0, 9036.333333333334], [527.0, 8049.0], [526.0, 8055.0], [525.0, 9146.0], [524.0, 9297.5], [523.0, 8096.0], [522.0, 8100.0], [521.0, 8111.5], [535.0, 7873.0], [534.0, 7903.0], [533.0, 7907.5], [532.0, 10072.0], [569.0, 7098.0], [574.0, 7075.0], [575.0, 7077.0], [560.0, 7304.0], [563.0, 8203.333333333334], [561.0, 7300.0], [573.0, 7087.0], [572.0, 7098.0], [570.0, 7091.0], [559.0, 7303.0], [544.0, 7707.0], [546.0, 7664.0], [545.0, 7674.0], [549.0, 7512.0], [547.0, 7635.0], [551.0, 7497.0], [550.0, 7500.0], [557.0, 7424.0], [556.0, 7468.0], [555.0, 7469.0], [554.0, 7491.0], [553.0, 7504.0], [552.0, 7498.0], [567.0, 7223.0], [566.0, 7249.0], [565.0, 7260.0], [564.0, 7273.0], [604.0, 6480.0], [607.0, 6463.0], [592.0, 6693.5], [594.0, 6674.0], [593.0, 6694.0], [596.0, 6669.0], [595.0, 6672.0], [606.0, 6474.0], [605.0, 6476.0], [603.0, 6487.0], [602.0, 6494.0], [601.0, 6491.0], [600.0, 6507.0], [590.0, 6707.0], [577.0, 7035.0], [576.0, 7070.0], [579.0, 6893.0], [578.0, 6889.0], [581.0, 6892.0], [580.0, 6890.0], [583.0, 6877.0], [582.0, 6889.0], [589.0, 6705.0], [587.0, 6825.0], [586.0, 6860.0], [585.0, 6865.0], [584.0, 8443.5], [598.0, 6626.0], [597.0, 6661.0], [636.0, 5878.0], [639.0, 5694.0], [625.0, 6080.0], [624.0, 6078.0], [627.0, 6050.0], [626.0, 6080.0], [629.0, 5897.0], [628.0, 6024.0], [638.0, 5828.0], [637.0, 5861.0], [635.0, 5879.0], [634.0, 5893.0], [633.0, 5895.0], [632.0, 5893.0], [622.0, 6089.0], [609.0, 8153.0], [608.0, 6412.0], [611.0, 6284.0], [610.0, 6295.0], [613.0, 6283.0], [612.0, 6286.0], [615.0, 6277.0], [614.0, 6290.0], [621.0, 6092.0], [620.0, 6080.0], [619.0, 6088.0], [618.0, 6216.0], [617.0, 6250.0], [616.0, 6267.0], [631.0, 5894.0], [630.0, 5896.0], [664.0, 5271.0], [669.0, 5219.0], [671.0, 5071.0], [657.0, 5453.0], [656.0, 5468.0], [659.0, 5276.0], [658.0, 5414.0], [668.0, 5229.0], [667.0, 5256.0], [665.0, 5277.0], [655.0, 5478.0], [640.0, 5699.0], [642.0, 5678.0], [641.0, 5696.0], [645.0, 5692.0], [644.0, 7121.333333333333], [647.0, 5662.0], [646.0, 5665.0], [654.0, 5479.0], [653.0, 5475.0], [652.0, 5473.0], [651.0, 5479.0], [650.0, 5487.0], [649.0, 5481.0], [648.0, 5619.0], [663.0, 7619.5], [662.0, 5272.0], [661.0, 2953.5], [660.0, 5281.0], [700.0, 7123.0], [703.0, 7034.5], [688.0, 7294.0], [690.0, 7253.5], [689.0, 4830.0], [692.0, 4665.0], [691.0, 4677.0], [702.0, 7036.0], [701.0, 7044.5], [699.0, 4625.0], [698.0, 4652.0], [697.0, 7987.333333333333], [696.0, 4657.0], [687.0, 8264.333333333334], [673.0, 5076.0], [672.0, 5078.0], [675.0, 5056.0], [674.0, 5071.0], [677.0, 5045.0], [676.0, 5069.0], [679.0, 5029.0], [678.0, 5060.0], [686.0, 4858.0], [685.0, 7410.5], [684.0, 4860.0], [683.0, 4864.0], [682.0, 4874.0], [681.0, 4879.0], [680.0, 5004.0], [694.0, 4663.0], [693.0, 4673.0], [731.0, 3771.0], [724.0, 4056.0], [732.0, 6525.5], [733.0, 9244.0], [735.0, 629.0], [734.0, 9011.0], [721.0, 6666.0], [720.0, 6741.5], [723.0, 4059.0], [722.0, 4105.0], [730.0, 4634.0], [729.0, 4033.0], [728.0, 6646.0], [711.0, 4269.0], [710.0, 4413.0], [709.0, 4432.0], [708.0, 4461.0], [707.0, 4458.0], [705.0, 4462.0], [706.0, 9609.0], [704.0, 7034.5], [719.0, 6772.0], [718.0, 4259.0], [716.0, 4250.0], [715.0, 5928.333333333333], [714.0, 9325.0], [713.0, 4260.0], [712.0, 6819.5], [727.0, 4054.0], [726.0, 4054.0], [725.0, 4054.0], [764.0, 3356.0], [767.0, 3312.0], [752.0, 3560.0], [754.0, 3550.0], [755.0, 8893.666666666666], [753.0, 3548.0], [757.0, 3522.0], [756.0, 6128.0], [766.0, 5943.0], [765.0, 5966.5], [763.0, 5993.0], [762.0, 3361.0], [761.0, 3355.0], [760.0, 3370.0], [751.0, 3552.0], [737.0, 3791.0], [736.0, 3749.0], [739.0, 6092.0], [738.0, 6380.5], [741.0, 3736.0], [740.0, 6331.5], [743.0, 3574.0], [742.0, 3721.0], [750.0, 3560.0], [746.0, 6228.0], [745.0, 6236.5], [759.0, 3368.0], [758.0, 3378.0], [792.0, 2761.0], [798.0, 3345.1428571428573], [799.0, 3183.25], [785.0, 5610.5], [784.0, 2953.0], [796.0, 5463.0], [797.0, 403.0], [795.0, 5481.0], [794.0, 2751.5], [783.0, 5733.5], [770.0, 5857.5], [768.0, 3172.0], [773.0, 3153.5], [771.0, 3150.0], [775.0, 3149.0], [774.0, 5839.0], [782.0, 2991.4], [777.0, 3113.0], [779.0, 3103.3333333333335], [781.0, 5812.666666666667], [776.0, 3131.0], [791.0, 2766.0], [790.0, 2768.5], [789.0, 5505.5], [788.0, 2776.0], [787.0, 2906.0], [786.0, 2933.0], [824.0, 7813.0], [800.0, 1429.5979381443299], [802.0, 8171.0], [817.0, 4144.5], [822.0, 7818.0], [821.0, 7846.0], [816.0, 7868.0], [815.0, 7899.0], [814.0, 7943.0], [813.0, 8166.0], [811.0, 8168.5], [862.0, 6815.0], [863.0, 6811.0], [851.0, 7167.0], [850.0, 7168.0], [860.0, 6835.0], [859.0, 6893.0], [858.0, 7097.0], [856.0, 7106.0], [847.0, 7183.0], [835.0, 7596.0], [834.0, 7810.5], [838.0, 7522.0], [836.0, 7541.0], [845.0, 7242.0], [844.0, 7452.0], [843.0, 7457.0], [842.0, 7463.0], [841.0, 7469.0], [840.0, 7493.0], [855.0, 7111.0], [854.0, 7120.0], [853.0, 7139.0], [852.0, 7146.0], [893.0, 6048.0], [895.0, 6042.0], [881.0, 6407.0], [880.0, 6427.0], [883.0, 6392.0], [882.0, 6401.0], [885.0, 6184.0], [884.0, 6393.0], [892.0, 6058.0], [891.0, 6065.0], [890.0, 6086.0], [889.0, 6092.0], [888.0, 6115.0], [871.0, 6538.0], [870.0, 6745.0], [869.0, 6750.0], [868.0, 6762.0], [865.0, 6789.0], [864.0, 6796.0], [878.0, 6433.0], [876.0, 6455.0], [875.0, 6462.0], [874.0, 6480.0], [887.0, 6116.0], [886.0, 6134.0], [921.0, 5318.0], [926.0, 4991.0], [920.0, 3066.0], [903.0, 5723.0], [901.0, 5727.0], [900.0, 5753.0], [899.0, 5754.0], [897.0, 5781.0], [896.0, 5839.0], [911.0, 5389.0], [909.0, 5417.0], [908.0, 5465.0], [907.0, 5686.0], [906.0, 5693.0], [905.0, 5701.0], [904.0, 5709.0], [927.0, 4991.0], [914.0, 5350.0], [913.0, 5355.0], [925.0, 5010.5], [923.0, 5040.0], [922.0, 5090.0], [918.0, 5326.0], [917.0, 5340.0], [953.0, 4235.0], [958.0, 3958.0], [959.0, 3939.0], [944.0, 4584.0], [947.0, 4306.0], [946.0, 4373.0], [949.0, 4284.0], [948.0, 4285.0], [957.0, 4029.0], [955.0, 4215.0], [954.0, 4230.0], [952.0, 4239.0], [935.0, 4654.0], [934.0, 4676.0], [933.0, 4738.0], [932.0, 4944.0], [931.0, 4949.0], [929.0, 4958.0], [928.0, 4970.0], [943.0, 4596.0], [942.0, 4598.0], [940.0, 4614.0], [939.0, 4633.0], [938.0, 4634.0], [937.0, 4646.0], [951.0, 4265.0], [950.0, 4272.0], [985.0, 3239.0], [990.0, 3189.0], [991.0, 3166.0], [978.0, 3542.0], [977.0, 3548.0], [980.0, 3517.0], [979.0, 3529.0], [989.0, 3203.0], [987.0, 3211.0], [986.0, 3232.0], [984.0, 3253.0], [967.0, 3863.0], [965.0, 3877.0], [964.0, 3892.0], [963.0, 3897.0], [962.0, 3924.5], [960.0, 3937.0], [975.0, 3584.0], [974.0, 3584.0], [973.0, 3599.0], [971.0, 3600.0], [970.0, 3614.0], [968.0, 3687.0], [982.0, 3272.0], [981.0, 3348.0], [996.0, 2901.0], [1000.0, 1688.3934426229507], [999.0, 2857.0], [998.0, 2869.0], [997.0, 2895.0], [995.0, 2910.0], [994.0, 2914.0], [993.0, 2917.0], [992.0, 3004.0], [1.0, 12644.5]], "isOverall": false, "label": "Read Artist", "isController": false}, {"data": [[587.3469010175759, 7265.0610545791]], "isOverall": false, "label": "Read Artist-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3636.633333333333, "minX": 1.63050894E12, "maxY": 518971.3333333333, "series": [{"data": [[1.63050894E12, 134691.98333333334], [1.630509E12, 518971.3333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.63050894E12, 3636.633333333333], [1.630509E12, 7364.833333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.630509E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 511.5130434782609, "minX": 1.63050894E12, "maxY": 12715.666666666666, "series": [{"data": [[1.630509E12, 12715.666666666666]], "isOverall": false, "label": "Update Artist", "isController": false}, {"data": [[1.63050894E12, 511.5130434782609], [1.630509E12, 7085.493693693693]], "isOverall": false, "label": "Create Artist", "isController": false}, {"data": [[1.63050894E12, 3260.0], [1.630509E12, 12174.365591397844]], "isOverall": false, "label": "Read Artist One", "isController": false}, {"data": [[1.63050894E12, 3532.138613861386], [1.630509E12, 8718.885604113108]], "isOverall": false, "label": "Read Artist", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.630509E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 500.6666666666667, "minX": 1.63050894E12, "maxY": 12715.666666666666, "series": [{"data": [[1.630509E12, 12715.666666666666]], "isOverall": false, "label": "Update Artist", "isController": false}, {"data": [[1.63050894E12, 500.6666666666667], [1.630509E12, 7085.441441441432]], "isOverall": false, "label": "Create Artist", "isController": false}, {"data": [[1.63050894E12, 3260.0], [1.630509E12, 12174.301075268817]], "isOverall": false, "label": "Read Artist One", "isController": false}, {"data": [[1.63050894E12, 3531.544554455447], [1.630509E12, 8718.250642673527]], "isOverall": false, "label": "Read Artist", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.630509E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.63050894E12, "maxY": 16.426086956521722, "series": [{"data": [[1.630509E12, 0.0]], "isOverall": false, "label": "Update Artist", "isController": false}, {"data": [[1.63050894E12, 16.426086956521722], [1.630509E12, 0.6387387387387393]], "isOverall": false, "label": "Create Artist", "isController": false}, {"data": [[1.63050894E12, 0.0], [1.630509E12, 0.0]], "isOverall": false, "label": "Read Artist One", "isController": false}, {"data": [[1.63050894E12, 0.0], [1.630509E12, 0.0]], "isOverall": false, "label": "Read Artist", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.630509E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.63050894E12, "maxY": 14334.0, "series": [{"data": [[1.63050894E12, 6669.0], [1.630509E12, 14334.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.63050894E12, 4663.8], [1.630509E12, 12888.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.63050894E12, 6476.16], [1.630509E12, 13868.599999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.63050894E12, 5679.4], [1.630509E12, 13322.6]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.63050894E12, 50.0], [1.630509E12, 1.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.63050894E12, 580.0], [1.630509E12, 9906.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.630509E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 224.0, "minX": 5.0, "maxY": 13199.5, "series": [{"data": [[33.0, 6750.0], [35.0, 2526.0], [34.0, 4633.5], [36.0, 4673.5], [39.0, 7808.0], [663.0, 437.0], [41.0, 12082.0], [44.0, 13050.5], [47.0, 5088.0], [49.0, 4249.0], [48.0, 8105.0], [51.0, 6088.0], [50.0, 7096.5], [52.0, 6242.0], [55.0, 3162.0], [61.0, 12882.0], [66.0, 11524.5], [78.0, 1388.0], [76.0, 11300.5], [80.0, 8524.5], [5.0, 12682.0], [87.0, 9430.0], [86.0, 11256.5], [88.0, 12755.0], [102.0, 13199.5], [134.0, 565.0], [201.0, 9911.0], [245.0, 12735.0], [303.0, 224.0], [25.0, 1627.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 663.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 224.0, "minX": 5.0, "maxY": 13199.5, "series": [{"data": [[33.0, 6749.0], [35.0, 2526.0], [34.0, 4633.0], [36.0, 4673.5], [39.0, 7808.0], [663.0, 435.0], [41.0, 12082.0], [44.0, 13050.0], [47.0, 5088.0], [49.0, 4248.0], [48.0, 8104.5], [51.0, 6087.0], [50.0, 7096.0], [52.0, 6242.0], [55.0, 3161.0], [61.0, 12882.0], [66.0, 11524.5], [78.0, 1387.5], [76.0, 11300.0], [80.0, 8524.0], [5.0, 12681.0], [87.0, 9430.0], [86.0, 11256.5], [88.0, 12754.5], [102.0, 13199.5], [134.0, 565.0], [201.0, 9911.0], [245.0, 12735.0], [303.0, 224.0], [25.0, 1626.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 663.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 24.8, "minX": 1.63050894E12, "maxY": 26.5, "series": [{"data": [[1.63050894E12, 26.5], [1.630509E12, 24.8]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.630509E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.15, "minX": 1.63050894E12, "maxY": 18.5, "series": [{"data": [[1.63050894E12, 5.083333333333333], [1.630509E12, 16.066666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.63050894E12, 11.5], [1.630509E12, 18.5]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.630509E12, 0.15]], "isOverall": false, "label": "202", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.630509E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.63050894E12, "maxY": 18.5, "series": [{"data": [[1.63050894E12, 5.05], [1.630509E12, 12.966666666666667]], "isOverall": false, "label": "Read Artist-success", "isController": false}, {"data": [[1.63050894E12, 0.03333333333333333], [1.630509E12, 3.1]], "isOverall": false, "label": "Read Artist One-success", "isController": false}, {"data": [[1.630509E12, 0.15]], "isOverall": false, "label": "Update Artist-success", "isController": false}, {"data": [[1.63050894E12, 11.5], [1.630509E12, 18.5]], "isOverall": false, "label": "Create Artist-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.630509E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 16.583333333333332, "minX": 1.63050894E12, "maxY": 34.71666666666667, "series": [{"data": [[1.63050894E12, 16.583333333333332], [1.630509E12, 34.71666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.630509E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 3600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

